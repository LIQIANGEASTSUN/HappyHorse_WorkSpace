// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkillConfigCliRpc.proto

#ifndef PROTOBUF_SkillConfigCliRpc_2eproto__INCLUDED
#define PROTOBUF_SkillConfigCliRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SkillConfigCliRpc_2eproto();
void protobuf_AssignDesc_SkillConfigCliRpc_2eproto();
void protobuf_ShutdownFile_SkillConfigCliRpc_2eproto();

class SkillConfigRpcsyncNotify;
class SkillConfigSkillPhase;
class SkillConfigSkillInfo;
class SkillConfigSkillEventBase;
class SkillConfigSkillCustomEvent;
class SkillConfigBulletTrajectoryEvent;
class SkillConfigCameraChangeInfo;

// ===================================================================

class SkillConfigRpcsyncNotify : public ::google::protobuf::Message {
 public:
  SkillConfigRpcsyncNotify();
  virtual ~SkillConfigRpcsyncNotify();

  SkillConfigRpcsyncNotify(const SkillConfigRpcsyncNotify& from);

  inline SkillConfigRpcsyncNotify& operator=(const SkillConfigRpcsyncNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillConfigRpcsyncNotify& default_instance();

  void Swap(SkillConfigRpcsyncNotify* other);

  // implements Message ----------------------------------------------

  SkillConfigRpcsyncNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillConfigRpcsyncNotify& from);
  void MergeFrom(const SkillConfigRpcsyncNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SkillConfigRpcsyncNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillConfigRpcsyncNotify* default_instance_;
};
// -------------------------------------------------------------------

class SkillConfigSkillPhase : public ::google::protobuf::Message {
 public:
  SkillConfigSkillPhase();
  virtual ~SkillConfigSkillPhase();

  SkillConfigSkillPhase(const SkillConfigSkillPhase& from);

  inline SkillConfigSkillPhase& operator=(const SkillConfigSkillPhase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillConfigSkillPhase& default_instance();

  void Swap(SkillConfigSkillPhase* other);

  // implements Message ----------------------------------------------

  SkillConfigSkillPhase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillConfigSkillPhase& from);
  void MergeFrom(const SkillConfigSkillPhase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 SkillPhaseType = 1 [default = 0];
  inline bool has_skillphasetype() const;
  inline void clear_skillphasetype();
  static const int kSkillPhaseTypeFieldNumber = 1;
  inline ::google::protobuf::int32 skillphasetype() const;
  inline void set_skillphasetype(::google::protobuf::int32 value);

  // optional sint32 TimeLength = 2 [default = -1];
  inline bool has_timelength() const;
  inline void clear_timelength();
  static const int kTimeLengthFieldNumber = 2;
  inline ::google::protobuf::int32 timelength() const;
  inline void set_timelength(::google::protobuf::int32 value);

  // repeated .SkillConfigSkillCustomEvent CustomEvetnList = 7;
  inline int customevetnlist_size() const;
  inline void clear_customevetnlist();
  static const int kCustomEvetnListFieldNumber = 7;
  inline const ::SkillConfigSkillCustomEvent& customevetnlist(int index) const;
  inline ::SkillConfigSkillCustomEvent* mutable_customevetnlist(int index);
  inline ::SkillConfigSkillCustomEvent* add_customevetnlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillCustomEvent >&
      customevetnlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillCustomEvent >*
      mutable_customevetnlist();

  // repeated .SkillConfigBulletTrajectoryEvent BulletTrajectoryEventList = 8;
  inline int bullettrajectoryeventlist_size() const;
  inline void clear_bullettrajectoryeventlist();
  static const int kBulletTrajectoryEventListFieldNumber = 8;
  inline const ::SkillConfigBulletTrajectoryEvent& bullettrajectoryeventlist(int index) const;
  inline ::SkillConfigBulletTrajectoryEvent* mutable_bullettrajectoryeventlist(int index);
  inline ::SkillConfigBulletTrajectoryEvent* add_bullettrajectoryeventlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillConfigBulletTrajectoryEvent >&
      bullettrajectoryeventlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillConfigBulletTrajectoryEvent >*
      mutable_bullettrajectoryeventlist();

  // @@protoc_insertion_point(class_scope:SkillConfigSkillPhase)
 private:
  inline void set_has_skillphasetype();
  inline void clear_has_skillphasetype();
  inline void set_has_timelength();
  inline void clear_has_timelength();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillphasetype_;
  ::google::protobuf::int32 timelength_;
  ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillCustomEvent > customevetnlist_;
  ::google::protobuf::RepeatedPtrField< ::SkillConfigBulletTrajectoryEvent > bullettrajectoryeventlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillConfigSkillPhase* default_instance_;
};
// -------------------------------------------------------------------

class SkillConfigSkillInfo : public ::google::protobuf::Message {
 public:
  SkillConfigSkillInfo();
  virtual ~SkillConfigSkillInfo();

  SkillConfigSkillInfo(const SkillConfigSkillInfo& from);

  inline SkillConfigSkillInfo& operator=(const SkillConfigSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillConfigSkillInfo& default_instance();

  void Swap(SkillConfigSkillInfo* other);

  // implements Message ----------------------------------------------

  SkillConfigSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillConfigSkillInfo& from);
  void MergeFrom(const SkillConfigSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Id = 8 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 8;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional sint32 HandleType = 4 [default = 0];
  inline bool has_handletype() const;
  inline void clear_handletype();
  static const int kHandleTypeFieldNumber = 4;
  inline ::google::protobuf::int32 handletype() const;
  inline void set_handletype(::google::protobuf::int32 value);

  // optional sint32 SkillTime = 5 [default = -1];
  inline bool has_skilltime() const;
  inline void clear_skilltime();
  static const int kSkillTimeFieldNumber = 5;
  inline ::google::protobuf::int32 skilltime() const;
  inline void set_skilltime(::google::protobuf::int32 value);

  // optional sint32 FocoTime = 6 [default = -1];
  inline bool has_focotime() const;
  inline void clear_focotime();
  static const int kFocoTimeFieldNumber = 6;
  inline ::google::protobuf::int32 focotime() const;
  inline void set_focotime(::google::protobuf::int32 value);

  // repeated .SkillConfigSkillPhase SkillPhaseList = 7;
  inline int skillphaselist_size() const;
  inline void clear_skillphaselist();
  static const int kSkillPhaseListFieldNumber = 7;
  inline const ::SkillConfigSkillPhase& skillphaselist(int index) const;
  inline ::SkillConfigSkillPhase* mutable_skillphaselist(int index);
  inline ::SkillConfigSkillPhase* add_skillphaselist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillPhase >&
      skillphaselist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillPhase >*
      mutable_skillphaselist();

  // optional bool Unbroken = 10 [default = false];
  inline bool has_unbroken() const;
  inline void clear_unbroken();
  static const int kUnbrokenFieldNumber = 10;
  inline bool unbroken() const;
  inline void set_unbroken(bool value);

  // optional sint32 UseTimes = 11 [default = -1];
  inline bool has_usetimes() const;
  inline void clear_usetimes();
  static const int kUseTimesFieldNumber = 11;
  inline ::google::protobuf::int32 usetimes() const;
  inline void set_usetimes(::google::protobuf::int32 value);

  // optional .SkillConfigCameraChangeInfo CameraData = 16;
  inline bool has_cameradata() const;
  inline void clear_cameradata();
  static const int kCameraDataFieldNumber = 16;
  inline const ::SkillConfigCameraChangeInfo& cameradata() const;
  inline ::SkillConfigCameraChangeInfo* mutable_cameradata();
  inline ::SkillConfigCameraChangeInfo* release_cameradata();
  inline void set_allocated_cameradata(::SkillConfigCameraChangeInfo* cameradata);

  // @@protoc_insertion_point(class_scope:SkillConfigSkillInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_handletype();
  inline void clear_has_handletype();
  inline void set_has_skilltime();
  inline void clear_has_skilltime();
  inline void set_has_focotime();
  inline void clear_has_focotime();
  inline void set_has_unbroken();
  inline void clear_has_unbroken();
  inline void set_has_usetimes();
  inline void clear_has_usetimes();
  inline void set_has_cameradata();
  inline void clear_has_cameradata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 handletype_;
  ::google::protobuf::int32 skilltime_;
  ::google::protobuf::int32 focotime_;
  ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillPhase > skillphaselist_;
  bool unbroken_;
  ::google::protobuf::int32 usetimes_;
  ::SkillConfigCameraChangeInfo* cameradata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillConfigSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class SkillConfigSkillEventBase : public ::google::protobuf::Message {
 public:
  SkillConfigSkillEventBase();
  virtual ~SkillConfigSkillEventBase();

  SkillConfigSkillEventBase(const SkillConfigSkillEventBase& from);

  inline SkillConfigSkillEventBase& operator=(const SkillConfigSkillEventBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillConfigSkillEventBase& default_instance();

  void Swap(SkillConfigSkillEventBase* other);

  // implements Message ----------------------------------------------

  SkillConfigSkillEventBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillConfigSkillEventBase& from);
  void MergeFrom(const SkillConfigSkillEventBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Id = 5 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional sint32 EventType = 2 [default = 0];
  inline bool has_eventtype() const;
  inline void clear_eventtype();
  static const int kEventTypeFieldNumber = 2;
  inline ::google::protobuf::int32 eventtype() const;
  inline void set_eventtype(::google::protobuf::int32 value);

  // optional sint32 Start = 3 [default = -1];
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 3;
  inline ::google::protobuf::int32 start() const;
  inline void set_start(::google::protobuf::int32 value);

  // optional sint32 EventLength = 4 [default = -1];
  inline bool has_eventlength() const;
  inline void clear_eventlength();
  static const int kEventLengthFieldNumber = 4;
  inline ::google::protobuf::int32 eventlength() const;
  inline void set_eventlength(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillConfigSkillEventBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_eventtype();
  inline void clear_has_eventtype();
  inline void set_has_start();
  inline void clear_has_start();
  inline void set_has_eventlength();
  inline void clear_has_eventlength();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 eventtype_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 eventlength_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillConfigSkillEventBase* default_instance_;
};
// -------------------------------------------------------------------

class SkillConfigSkillCustomEvent : public ::google::protobuf::Message {
 public:
  SkillConfigSkillCustomEvent();
  virtual ~SkillConfigSkillCustomEvent();

  SkillConfigSkillCustomEvent(const SkillConfigSkillCustomEvent& from);

  inline SkillConfigSkillCustomEvent& operator=(const SkillConfigSkillCustomEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillConfigSkillCustomEvent& default_instance();

  void Swap(SkillConfigSkillCustomEvent* other);

  // implements Message ----------------------------------------------

  SkillConfigSkillCustomEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillConfigSkillCustomEvent& from);
  void MergeFrom(const SkillConfigSkillCustomEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SkillConfigSkillEventBase EventBase = 17;
  inline bool has_eventbase() const;
  inline void clear_eventbase();
  static const int kEventBaseFieldNumber = 17;
  inline const ::SkillConfigSkillEventBase& eventbase() const;
  inline ::SkillConfigSkillEventBase* mutable_eventbase();
  inline ::SkillConfigSkillEventBase* release_eventbase();
  inline void set_allocated_eventbase(::SkillConfigSkillEventBase* eventbase);

  // optional string FileName = 6;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 6;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional sint32 ModelMountPoint = 7 [default = 0];
  inline bool has_modelmountpoint() const;
  inline void clear_modelmountpoint();
  static const int kModelMountPointFieldNumber = 7;
  inline ::google::protobuf::int32 modelmountpoint() const;
  inline void set_modelmountpoint(::google::protobuf::int32 value);

  // optional sint32 WeaponMountPoint = 8 [default = 0];
  inline bool has_weaponmountpoint() const;
  inline void clear_weaponmountpoint();
  static const int kWeaponMountPointFieldNumber = 8;
  inline ::google::protobuf::int32 weaponmountpoint() const;
  inline void set_weaponmountpoint(::google::protobuf::int32 value);

  // optional sint32 EffectMountPoint = 12 [default = 0];
  inline bool has_effectmountpoint() const;
  inline void clear_effectmountpoint();
  static const int kEffectMountPointFieldNumber = 12;
  inline ::google::protobuf::int32 effectmountpoint() const;
  inline void set_effectmountpoint(::google::protobuf::int32 value);

  // optional bool Loop = 9 [default = false];
  inline bool has_loop() const;
  inline void clear_loop();
  static const int kLoopFieldNumber = 9;
  inline bool loop() const;
  inline void set_loop(bool value);

  // optional bool WholeAnimation = 10 [default = false];
  inline bool has_wholeanimation() const;
  inline void clear_wholeanimation();
  static const int kWholeAnimationFieldNumber = 10;
  inline bool wholeanimation() const;
  inline void set_wholeanimation(bool value);

  // optional float OffsetX = 14 [default = -1];
  inline bool has_offsetx() const;
  inline void clear_offsetx();
  static const int kOffsetXFieldNumber = 14;
  inline float offsetx() const;
  inline void set_offsetx(float value);

  // optional float OffsetY = 15 [default = -1];
  inline bool has_offsety() const;
  inline void clear_offsety();
  static const int kOffsetYFieldNumber = 15;
  inline float offsety() const;
  inline void set_offsety(float value);

  // optional float OffsetZ = 16 [default = -1];
  inline bool has_offsetz() const;
  inline void clear_offsetz();
  static const int kOffsetZFieldNumber = 16;
  inline float offsetz() const;
  inline void set_offsetz(float value);

  // optional sint32 Id = 18 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 18;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional sint32 EffectRemove = 21 [default = 0];
  inline bool has_effectremove() const;
  inline void clear_effectremove();
  static const int kEffectRemoveFieldNumber = 21;
  inline ::google::protobuf::int32 effectremove() const;
  inline void set_effectremove(::google::protobuf::int32 value);

  // optional sint32 EffectRemoveTime = 20 [default = -1];
  inline bool has_effectremovetime() const;
  inline void clear_effectremovetime();
  static const int kEffectRemoveTimeFieldNumber = 20;
  inline ::google::protobuf::int32 effectremovetime() const;
  inline void set_effectremovetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillConfigSkillCustomEvent)
 private:
  inline void set_has_eventbase();
  inline void clear_has_eventbase();
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_modelmountpoint();
  inline void clear_has_modelmountpoint();
  inline void set_has_weaponmountpoint();
  inline void clear_has_weaponmountpoint();
  inline void set_has_effectmountpoint();
  inline void clear_has_effectmountpoint();
  inline void set_has_loop();
  inline void clear_has_loop();
  inline void set_has_wholeanimation();
  inline void clear_has_wholeanimation();
  inline void set_has_offsetx();
  inline void clear_has_offsetx();
  inline void set_has_offsety();
  inline void clear_has_offsety();
  inline void set_has_offsetz();
  inline void clear_has_offsetz();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_effectremove();
  inline void clear_has_effectremove();
  inline void set_has_effectremovetime();
  inline void clear_has_effectremovetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SkillConfigSkillEventBase* eventbase_;
  ::std::string* filename_;
  ::google::protobuf::int32 modelmountpoint_;
  ::google::protobuf::int32 weaponmountpoint_;
  ::google::protobuf::int32 effectmountpoint_;
  bool loop_;
  bool wholeanimation_;
  float offsetx_;
  float offsety_;
  float offsetz_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 effectremove_;
  ::google::protobuf::int32 effectremovetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillConfigSkillCustomEvent* default_instance_;
};
// -------------------------------------------------------------------

class SkillConfigBulletTrajectoryEvent : public ::google::protobuf::Message {
 public:
  SkillConfigBulletTrajectoryEvent();
  virtual ~SkillConfigBulletTrajectoryEvent();

  SkillConfigBulletTrajectoryEvent(const SkillConfigBulletTrajectoryEvent& from);

  inline SkillConfigBulletTrajectoryEvent& operator=(const SkillConfigBulletTrajectoryEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillConfigBulletTrajectoryEvent& default_instance();

  void Swap(SkillConfigBulletTrajectoryEvent* other);

  // implements Message ----------------------------------------------

  SkillConfigBulletTrajectoryEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillConfigBulletTrajectoryEvent& from);
  void MergeFrom(const SkillConfigBulletTrajectoryEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SkillConfigSkillEventBase EventBase = 1;
  inline bool has_eventbase() const;
  inline void clear_eventbase();
  static const int kEventBaseFieldNumber = 1;
  inline const ::SkillConfigSkillEventBase& eventbase() const;
  inline ::SkillConfigSkillEventBase* mutable_eventbase();
  inline ::SkillConfigSkillEventBase* release_eventbase();
  inline void set_allocated_eventbase(::SkillConfigSkillEventBase* eventbase);

  // optional sint32 Id = 2 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional sint32 ModelMountPoint = 4 [default = 0];
  inline bool has_modelmountpoint() const;
  inline void clear_modelmountpoint();
  static const int kModelMountPointFieldNumber = 4;
  inline ::google::protobuf::int32 modelmountpoint() const;
  inline void set_modelmountpoint(::google::protobuf::int32 value);

  // optional sint32 WeaponMountPoint = 5 [default = 0];
  inline bool has_weaponmountpoint() const;
  inline void clear_weaponmountpoint();
  static const int kWeaponMountPointFieldNumber = 5;
  inline ::google::protobuf::int32 weaponmountpoint() const;
  inline void set_weaponmountpoint(::google::protobuf::int32 value);

  // optional float OffsetX = 6 [default = -1];
  inline bool has_offsetx() const;
  inline void clear_offsetx();
  static const int kOffsetXFieldNumber = 6;
  inline float offsetx() const;
  inline void set_offsetx(float value);

  // optional float OffsetY = 7 [default = -1];
  inline bool has_offsety() const;
  inline void clear_offsety();
  static const int kOffsetYFieldNumber = 7;
  inline float offsety() const;
  inline void set_offsety(float value);

  // optional float OffsetZ = 8 [default = -1];
  inline bool has_offsetz() const;
  inline void clear_offsetz();
  static const int kOffsetZFieldNumber = 8;
  inline float offsetz() const;
  inline void set_offsetz(float value);

  // @@protoc_insertion_point(class_scope:SkillConfigBulletTrajectoryEvent)
 private:
  inline void set_has_eventbase();
  inline void clear_has_eventbase();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_modelmountpoint();
  inline void clear_has_modelmountpoint();
  inline void set_has_weaponmountpoint();
  inline void clear_has_weaponmountpoint();
  inline void set_has_offsetx();
  inline void clear_has_offsetx();
  inline void set_has_offsety();
  inline void clear_has_offsety();
  inline void set_has_offsetz();
  inline void clear_has_offsetz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SkillConfigSkillEventBase* eventbase_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 modelmountpoint_;
  ::google::protobuf::int32 weaponmountpoint_;
  float offsetx_;
  float offsety_;
  float offsetz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillConfigBulletTrajectoryEvent* default_instance_;
};
// -------------------------------------------------------------------

class SkillConfigCameraChangeInfo : public ::google::protobuf::Message {
 public:
  SkillConfigCameraChangeInfo();
  virtual ~SkillConfigCameraChangeInfo();

  SkillConfigCameraChangeInfo(const SkillConfigCameraChangeInfo& from);

  inline SkillConfigCameraChangeInfo& operator=(const SkillConfigCameraChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillConfigCameraChangeInfo& default_instance();

  void Swap(SkillConfigCameraChangeInfo* other);

  // implements Message ----------------------------------------------

  SkillConfigCameraChangeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillConfigCameraChangeInfo& from);
  void MergeFrom(const SkillConfigCameraChangeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 CameraChangeStartTime = 1 [default = -1];
  inline bool has_camerachangestarttime() const;
  inline void clear_camerachangestarttime();
  static const int kCameraChangeStartTimeFieldNumber = 1;
  inline ::google::protobuf::int32 camerachangestarttime() const;
  inline void set_camerachangestarttime(::google::protobuf::int32 value);

  // optional float CameraFieldView = 2 [default = -1];
  inline bool has_camerafieldview() const;
  inline void clear_camerafieldview();
  static const int kCameraFieldViewFieldNumber = 2;
  inline float camerafieldview() const;
  inline void set_camerafieldview(float value);

  // optional sint32 CameraChangeEndTime = 3 [default = -1];
  inline bool has_camerachangeendtime() const;
  inline void clear_camerachangeendtime();
  static const int kCameraChangeEndTimeFieldNumber = 3;
  inline ::google::protobuf::int32 camerachangeendtime() const;
  inline void set_camerachangeendtime(::google::protobuf::int32 value);

  // optional sint32 CameraRecoverTime = 4 [default = -1];
  inline bool has_camerarecovertime() const;
  inline void clear_camerarecovertime();
  static const int kCameraRecoverTimeFieldNumber = 4;
  inline ::google::protobuf::int32 camerarecovertime() const;
  inline void set_camerarecovertime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillConfigCameraChangeInfo)
 private:
  inline void set_has_camerachangestarttime();
  inline void clear_has_camerachangestarttime();
  inline void set_has_camerafieldview();
  inline void clear_has_camerafieldview();
  inline void set_has_camerachangeendtime();
  inline void clear_has_camerachangeendtime();
  inline void set_has_camerarecovertime();
  inline void clear_has_camerarecovertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 camerachangestarttime_;
  float camerafieldview_;
  ::google::protobuf::int32 camerachangeendtime_;
  ::google::protobuf::int32 camerarecovertime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillConfigCameraChangeInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SkillConfigRpcsyncNotify

// -------------------------------------------------------------------

// SkillConfigSkillPhase

// optional sint32 SkillPhaseType = 1 [default = 0];
inline bool SkillConfigSkillPhase::has_skillphasetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillConfigSkillPhase::set_has_skillphasetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillConfigSkillPhase::clear_has_skillphasetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillConfigSkillPhase::clear_skillphasetype() {
  skillphasetype_ = 0;
  clear_has_skillphasetype();
}
inline ::google::protobuf::int32 SkillConfigSkillPhase::skillphasetype() const {
  return skillphasetype_;
}
inline void SkillConfigSkillPhase::set_skillphasetype(::google::protobuf::int32 value) {
  set_has_skillphasetype();
  skillphasetype_ = value;
}

// optional sint32 TimeLength = 2 [default = -1];
inline bool SkillConfigSkillPhase::has_timelength() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillConfigSkillPhase::set_has_timelength() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillConfigSkillPhase::clear_has_timelength() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillConfigSkillPhase::clear_timelength() {
  timelength_ = -1;
  clear_has_timelength();
}
inline ::google::protobuf::int32 SkillConfigSkillPhase::timelength() const {
  return timelength_;
}
inline void SkillConfigSkillPhase::set_timelength(::google::protobuf::int32 value) {
  set_has_timelength();
  timelength_ = value;
}

// repeated .SkillConfigSkillCustomEvent CustomEvetnList = 7;
inline int SkillConfigSkillPhase::customevetnlist_size() const {
  return customevetnlist_.size();
}
inline void SkillConfigSkillPhase::clear_customevetnlist() {
  customevetnlist_.Clear();
}
inline const ::SkillConfigSkillCustomEvent& SkillConfigSkillPhase::customevetnlist(int index) const {
  return customevetnlist_.Get(index);
}
inline ::SkillConfigSkillCustomEvent* SkillConfigSkillPhase::mutable_customevetnlist(int index) {
  return customevetnlist_.Mutable(index);
}
inline ::SkillConfigSkillCustomEvent* SkillConfigSkillPhase::add_customevetnlist() {
  return customevetnlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillCustomEvent >&
SkillConfigSkillPhase::customevetnlist() const {
  return customevetnlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillCustomEvent >*
SkillConfigSkillPhase::mutable_customevetnlist() {
  return &customevetnlist_;
}

// repeated .SkillConfigBulletTrajectoryEvent BulletTrajectoryEventList = 8;
inline int SkillConfigSkillPhase::bullettrajectoryeventlist_size() const {
  return bullettrajectoryeventlist_.size();
}
inline void SkillConfigSkillPhase::clear_bullettrajectoryeventlist() {
  bullettrajectoryeventlist_.Clear();
}
inline const ::SkillConfigBulletTrajectoryEvent& SkillConfigSkillPhase::bullettrajectoryeventlist(int index) const {
  return bullettrajectoryeventlist_.Get(index);
}
inline ::SkillConfigBulletTrajectoryEvent* SkillConfigSkillPhase::mutable_bullettrajectoryeventlist(int index) {
  return bullettrajectoryeventlist_.Mutable(index);
}
inline ::SkillConfigBulletTrajectoryEvent* SkillConfigSkillPhase::add_bullettrajectoryeventlist() {
  return bullettrajectoryeventlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillConfigBulletTrajectoryEvent >&
SkillConfigSkillPhase::bullettrajectoryeventlist() const {
  return bullettrajectoryeventlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillConfigBulletTrajectoryEvent >*
SkillConfigSkillPhase::mutable_bullettrajectoryeventlist() {
  return &bullettrajectoryeventlist_;
}

// -------------------------------------------------------------------

// SkillConfigSkillInfo

// optional sint32 Id = 8 [default = -1];
inline bool SkillConfigSkillInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillConfigSkillInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillConfigSkillInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillConfigSkillInfo::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 SkillConfigSkillInfo::id() const {
  return id_;
}
inline void SkillConfigSkillInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional sint32 HandleType = 4 [default = 0];
inline bool SkillConfigSkillInfo::has_handletype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillConfigSkillInfo::set_has_handletype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillConfigSkillInfo::clear_has_handletype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillConfigSkillInfo::clear_handletype() {
  handletype_ = 0;
  clear_has_handletype();
}
inline ::google::protobuf::int32 SkillConfigSkillInfo::handletype() const {
  return handletype_;
}
inline void SkillConfigSkillInfo::set_handletype(::google::protobuf::int32 value) {
  set_has_handletype();
  handletype_ = value;
}

// optional sint32 SkillTime = 5 [default = -1];
inline bool SkillConfigSkillInfo::has_skilltime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillConfigSkillInfo::set_has_skilltime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillConfigSkillInfo::clear_has_skilltime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillConfigSkillInfo::clear_skilltime() {
  skilltime_ = -1;
  clear_has_skilltime();
}
inline ::google::protobuf::int32 SkillConfigSkillInfo::skilltime() const {
  return skilltime_;
}
inline void SkillConfigSkillInfo::set_skilltime(::google::protobuf::int32 value) {
  set_has_skilltime();
  skilltime_ = value;
}

// optional sint32 FocoTime = 6 [default = -1];
inline bool SkillConfigSkillInfo::has_focotime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillConfigSkillInfo::set_has_focotime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillConfigSkillInfo::clear_has_focotime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillConfigSkillInfo::clear_focotime() {
  focotime_ = -1;
  clear_has_focotime();
}
inline ::google::protobuf::int32 SkillConfigSkillInfo::focotime() const {
  return focotime_;
}
inline void SkillConfigSkillInfo::set_focotime(::google::protobuf::int32 value) {
  set_has_focotime();
  focotime_ = value;
}

// repeated .SkillConfigSkillPhase SkillPhaseList = 7;
inline int SkillConfigSkillInfo::skillphaselist_size() const {
  return skillphaselist_.size();
}
inline void SkillConfigSkillInfo::clear_skillphaselist() {
  skillphaselist_.Clear();
}
inline const ::SkillConfigSkillPhase& SkillConfigSkillInfo::skillphaselist(int index) const {
  return skillphaselist_.Get(index);
}
inline ::SkillConfigSkillPhase* SkillConfigSkillInfo::mutable_skillphaselist(int index) {
  return skillphaselist_.Mutable(index);
}
inline ::SkillConfigSkillPhase* SkillConfigSkillInfo::add_skillphaselist() {
  return skillphaselist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillPhase >&
SkillConfigSkillInfo::skillphaselist() const {
  return skillphaselist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillConfigSkillPhase >*
SkillConfigSkillInfo::mutable_skillphaselist() {
  return &skillphaselist_;
}

// optional bool Unbroken = 10 [default = false];
inline bool SkillConfigSkillInfo::has_unbroken() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillConfigSkillInfo::set_has_unbroken() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillConfigSkillInfo::clear_has_unbroken() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillConfigSkillInfo::clear_unbroken() {
  unbroken_ = false;
  clear_has_unbroken();
}
inline bool SkillConfigSkillInfo::unbroken() const {
  return unbroken_;
}
inline void SkillConfigSkillInfo::set_unbroken(bool value) {
  set_has_unbroken();
  unbroken_ = value;
}

// optional sint32 UseTimes = 11 [default = -1];
inline bool SkillConfigSkillInfo::has_usetimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillConfigSkillInfo::set_has_usetimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillConfigSkillInfo::clear_has_usetimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillConfigSkillInfo::clear_usetimes() {
  usetimes_ = -1;
  clear_has_usetimes();
}
inline ::google::protobuf::int32 SkillConfigSkillInfo::usetimes() const {
  return usetimes_;
}
inline void SkillConfigSkillInfo::set_usetimes(::google::protobuf::int32 value) {
  set_has_usetimes();
  usetimes_ = value;
}

// optional .SkillConfigCameraChangeInfo CameraData = 16;
inline bool SkillConfigSkillInfo::has_cameradata() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SkillConfigSkillInfo::set_has_cameradata() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SkillConfigSkillInfo::clear_has_cameradata() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SkillConfigSkillInfo::clear_cameradata() {
  if (cameradata_ != NULL) cameradata_->::SkillConfigCameraChangeInfo::Clear();
  clear_has_cameradata();
}
inline const ::SkillConfigCameraChangeInfo& SkillConfigSkillInfo::cameradata() const {
  return cameradata_ != NULL ? *cameradata_ : *default_instance_->cameradata_;
}
inline ::SkillConfigCameraChangeInfo* SkillConfigSkillInfo::mutable_cameradata() {
  set_has_cameradata();
  if (cameradata_ == NULL) cameradata_ = new ::SkillConfigCameraChangeInfo;
  return cameradata_;
}
inline ::SkillConfigCameraChangeInfo* SkillConfigSkillInfo::release_cameradata() {
  clear_has_cameradata();
  ::SkillConfigCameraChangeInfo* temp = cameradata_;
  cameradata_ = NULL;
  return temp;
}
inline void SkillConfigSkillInfo::set_allocated_cameradata(::SkillConfigCameraChangeInfo* cameradata) {
  delete cameradata_;
  cameradata_ = cameradata;
  if (cameradata) {
    set_has_cameradata();
  } else {
    clear_has_cameradata();
  }
}

// -------------------------------------------------------------------

// SkillConfigSkillEventBase

// optional sint32 Id = 5 [default = -1];
inline bool SkillConfigSkillEventBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillConfigSkillEventBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillConfigSkillEventBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillConfigSkillEventBase::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 SkillConfigSkillEventBase::id() const {
  return id_;
}
inline void SkillConfigSkillEventBase::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional sint32 EventType = 2 [default = 0];
inline bool SkillConfigSkillEventBase::has_eventtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillConfigSkillEventBase::set_has_eventtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillConfigSkillEventBase::clear_has_eventtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillConfigSkillEventBase::clear_eventtype() {
  eventtype_ = 0;
  clear_has_eventtype();
}
inline ::google::protobuf::int32 SkillConfigSkillEventBase::eventtype() const {
  return eventtype_;
}
inline void SkillConfigSkillEventBase::set_eventtype(::google::protobuf::int32 value) {
  set_has_eventtype();
  eventtype_ = value;
}

// optional sint32 Start = 3 [default = -1];
inline bool SkillConfigSkillEventBase::has_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillConfigSkillEventBase::set_has_start() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillConfigSkillEventBase::clear_has_start() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillConfigSkillEventBase::clear_start() {
  start_ = -1;
  clear_has_start();
}
inline ::google::protobuf::int32 SkillConfigSkillEventBase::start() const {
  return start_;
}
inline void SkillConfigSkillEventBase::set_start(::google::protobuf::int32 value) {
  set_has_start();
  start_ = value;
}

// optional sint32 EventLength = 4 [default = -1];
inline bool SkillConfigSkillEventBase::has_eventlength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillConfigSkillEventBase::set_has_eventlength() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillConfigSkillEventBase::clear_has_eventlength() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillConfigSkillEventBase::clear_eventlength() {
  eventlength_ = -1;
  clear_has_eventlength();
}
inline ::google::protobuf::int32 SkillConfigSkillEventBase::eventlength() const {
  return eventlength_;
}
inline void SkillConfigSkillEventBase::set_eventlength(::google::protobuf::int32 value) {
  set_has_eventlength();
  eventlength_ = value;
}

// -------------------------------------------------------------------

// SkillConfigSkillCustomEvent

// optional .SkillConfigSkillEventBase EventBase = 17;
inline bool SkillConfigSkillCustomEvent::has_eventbase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_eventbase() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillConfigSkillCustomEvent::clear_has_eventbase() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillConfigSkillCustomEvent::clear_eventbase() {
  if (eventbase_ != NULL) eventbase_->::SkillConfigSkillEventBase::Clear();
  clear_has_eventbase();
}
inline const ::SkillConfigSkillEventBase& SkillConfigSkillCustomEvent::eventbase() const {
  return eventbase_ != NULL ? *eventbase_ : *default_instance_->eventbase_;
}
inline ::SkillConfigSkillEventBase* SkillConfigSkillCustomEvent::mutable_eventbase() {
  set_has_eventbase();
  if (eventbase_ == NULL) eventbase_ = new ::SkillConfigSkillEventBase;
  return eventbase_;
}
inline ::SkillConfigSkillEventBase* SkillConfigSkillCustomEvent::release_eventbase() {
  clear_has_eventbase();
  ::SkillConfigSkillEventBase* temp = eventbase_;
  eventbase_ = NULL;
  return temp;
}
inline void SkillConfigSkillCustomEvent::set_allocated_eventbase(::SkillConfigSkillEventBase* eventbase) {
  delete eventbase_;
  eventbase_ = eventbase;
  if (eventbase) {
    set_has_eventbase();
  } else {
    clear_has_eventbase();
  }
}

// optional string FileName = 6;
inline bool SkillConfigSkillCustomEvent::has_filename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_filename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillConfigSkillCustomEvent::clear_has_filename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillConfigSkillCustomEvent::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& SkillConfigSkillCustomEvent::filename() const {
  return *filename_;
}
inline void SkillConfigSkillCustomEvent::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void SkillConfigSkillCustomEvent::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void SkillConfigSkillCustomEvent::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SkillConfigSkillCustomEvent::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* SkillConfigSkillCustomEvent::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SkillConfigSkillCustomEvent::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional sint32 ModelMountPoint = 7 [default = 0];
inline bool SkillConfigSkillCustomEvent::has_modelmountpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_modelmountpoint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillConfigSkillCustomEvent::clear_has_modelmountpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillConfigSkillCustomEvent::clear_modelmountpoint() {
  modelmountpoint_ = 0;
  clear_has_modelmountpoint();
}
inline ::google::protobuf::int32 SkillConfigSkillCustomEvent::modelmountpoint() const {
  return modelmountpoint_;
}
inline void SkillConfigSkillCustomEvent::set_modelmountpoint(::google::protobuf::int32 value) {
  set_has_modelmountpoint();
  modelmountpoint_ = value;
}

// optional sint32 WeaponMountPoint = 8 [default = 0];
inline bool SkillConfigSkillCustomEvent::has_weaponmountpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_weaponmountpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillConfigSkillCustomEvent::clear_has_weaponmountpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillConfigSkillCustomEvent::clear_weaponmountpoint() {
  weaponmountpoint_ = 0;
  clear_has_weaponmountpoint();
}
inline ::google::protobuf::int32 SkillConfigSkillCustomEvent::weaponmountpoint() const {
  return weaponmountpoint_;
}
inline void SkillConfigSkillCustomEvent::set_weaponmountpoint(::google::protobuf::int32 value) {
  set_has_weaponmountpoint();
  weaponmountpoint_ = value;
}

// optional sint32 EffectMountPoint = 12 [default = 0];
inline bool SkillConfigSkillCustomEvent::has_effectmountpoint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_effectmountpoint() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillConfigSkillCustomEvent::clear_has_effectmountpoint() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillConfigSkillCustomEvent::clear_effectmountpoint() {
  effectmountpoint_ = 0;
  clear_has_effectmountpoint();
}
inline ::google::protobuf::int32 SkillConfigSkillCustomEvent::effectmountpoint() const {
  return effectmountpoint_;
}
inline void SkillConfigSkillCustomEvent::set_effectmountpoint(::google::protobuf::int32 value) {
  set_has_effectmountpoint();
  effectmountpoint_ = value;
}

// optional bool Loop = 9 [default = false];
inline bool SkillConfigSkillCustomEvent::has_loop() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_loop() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillConfigSkillCustomEvent::clear_has_loop() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillConfigSkillCustomEvent::clear_loop() {
  loop_ = false;
  clear_has_loop();
}
inline bool SkillConfigSkillCustomEvent::loop() const {
  return loop_;
}
inline void SkillConfigSkillCustomEvent::set_loop(bool value) {
  set_has_loop();
  loop_ = value;
}

// optional bool WholeAnimation = 10 [default = false];
inline bool SkillConfigSkillCustomEvent::has_wholeanimation() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_wholeanimation() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillConfigSkillCustomEvent::clear_has_wholeanimation() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillConfigSkillCustomEvent::clear_wholeanimation() {
  wholeanimation_ = false;
  clear_has_wholeanimation();
}
inline bool SkillConfigSkillCustomEvent::wholeanimation() const {
  return wholeanimation_;
}
inline void SkillConfigSkillCustomEvent::set_wholeanimation(bool value) {
  set_has_wholeanimation();
  wholeanimation_ = value;
}

// optional float OffsetX = 14 [default = -1];
inline bool SkillConfigSkillCustomEvent::has_offsetx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_offsetx() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SkillConfigSkillCustomEvent::clear_has_offsetx() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SkillConfigSkillCustomEvent::clear_offsetx() {
  offsetx_ = -1;
  clear_has_offsetx();
}
inline float SkillConfigSkillCustomEvent::offsetx() const {
  return offsetx_;
}
inline void SkillConfigSkillCustomEvent::set_offsetx(float value) {
  set_has_offsetx();
  offsetx_ = value;
}

// optional float OffsetY = 15 [default = -1];
inline bool SkillConfigSkillCustomEvent::has_offsety() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_offsety() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SkillConfigSkillCustomEvent::clear_has_offsety() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SkillConfigSkillCustomEvent::clear_offsety() {
  offsety_ = -1;
  clear_has_offsety();
}
inline float SkillConfigSkillCustomEvent::offsety() const {
  return offsety_;
}
inline void SkillConfigSkillCustomEvent::set_offsety(float value) {
  set_has_offsety();
  offsety_ = value;
}

// optional float OffsetZ = 16 [default = -1];
inline bool SkillConfigSkillCustomEvent::has_offsetz() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_offsetz() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SkillConfigSkillCustomEvent::clear_has_offsetz() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SkillConfigSkillCustomEvent::clear_offsetz() {
  offsetz_ = -1;
  clear_has_offsetz();
}
inline float SkillConfigSkillCustomEvent::offsetz() const {
  return offsetz_;
}
inline void SkillConfigSkillCustomEvent::set_offsetz(float value) {
  set_has_offsetz();
  offsetz_ = value;
}

// optional sint32 Id = 18 [default = -1];
inline bool SkillConfigSkillCustomEvent::has_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SkillConfigSkillCustomEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SkillConfigSkillCustomEvent::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 SkillConfigSkillCustomEvent::id() const {
  return id_;
}
inline void SkillConfigSkillCustomEvent::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional sint32 EffectRemove = 21 [default = 0];
inline bool SkillConfigSkillCustomEvent::has_effectremove() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_effectremove() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SkillConfigSkillCustomEvent::clear_has_effectremove() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SkillConfigSkillCustomEvent::clear_effectremove() {
  effectremove_ = 0;
  clear_has_effectremove();
}
inline ::google::protobuf::int32 SkillConfigSkillCustomEvent::effectremove() const {
  return effectremove_;
}
inline void SkillConfigSkillCustomEvent::set_effectremove(::google::protobuf::int32 value) {
  set_has_effectremove();
  effectremove_ = value;
}

// optional sint32 EffectRemoveTime = 20 [default = -1];
inline bool SkillConfigSkillCustomEvent::has_effectremovetime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SkillConfigSkillCustomEvent::set_has_effectremovetime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SkillConfigSkillCustomEvent::clear_has_effectremovetime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SkillConfigSkillCustomEvent::clear_effectremovetime() {
  effectremovetime_ = -1;
  clear_has_effectremovetime();
}
inline ::google::protobuf::int32 SkillConfigSkillCustomEvent::effectremovetime() const {
  return effectremovetime_;
}
inline void SkillConfigSkillCustomEvent::set_effectremovetime(::google::protobuf::int32 value) {
  set_has_effectremovetime();
  effectremovetime_ = value;
}

// -------------------------------------------------------------------

// SkillConfigBulletTrajectoryEvent

// optional .SkillConfigSkillEventBase EventBase = 1;
inline bool SkillConfigBulletTrajectoryEvent::has_eventbase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillConfigBulletTrajectoryEvent::set_has_eventbase() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_has_eventbase() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_eventbase() {
  if (eventbase_ != NULL) eventbase_->::SkillConfigSkillEventBase::Clear();
  clear_has_eventbase();
}
inline const ::SkillConfigSkillEventBase& SkillConfigBulletTrajectoryEvent::eventbase() const {
  return eventbase_ != NULL ? *eventbase_ : *default_instance_->eventbase_;
}
inline ::SkillConfigSkillEventBase* SkillConfigBulletTrajectoryEvent::mutable_eventbase() {
  set_has_eventbase();
  if (eventbase_ == NULL) eventbase_ = new ::SkillConfigSkillEventBase;
  return eventbase_;
}
inline ::SkillConfigSkillEventBase* SkillConfigBulletTrajectoryEvent::release_eventbase() {
  clear_has_eventbase();
  ::SkillConfigSkillEventBase* temp = eventbase_;
  eventbase_ = NULL;
  return temp;
}
inline void SkillConfigBulletTrajectoryEvent::set_allocated_eventbase(::SkillConfigSkillEventBase* eventbase) {
  delete eventbase_;
  eventbase_ = eventbase;
  if (eventbase) {
    set_has_eventbase();
  } else {
    clear_has_eventbase();
  }
}

// optional sint32 Id = 2 [default = -1];
inline bool SkillConfigBulletTrajectoryEvent::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillConfigBulletTrajectoryEvent::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 SkillConfigBulletTrajectoryEvent::id() const {
  return id_;
}
inline void SkillConfigBulletTrajectoryEvent::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional sint32 ModelMountPoint = 4 [default = 0];
inline bool SkillConfigBulletTrajectoryEvent::has_modelmountpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillConfigBulletTrajectoryEvent::set_has_modelmountpoint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_has_modelmountpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_modelmountpoint() {
  modelmountpoint_ = 0;
  clear_has_modelmountpoint();
}
inline ::google::protobuf::int32 SkillConfigBulletTrajectoryEvent::modelmountpoint() const {
  return modelmountpoint_;
}
inline void SkillConfigBulletTrajectoryEvent::set_modelmountpoint(::google::protobuf::int32 value) {
  set_has_modelmountpoint();
  modelmountpoint_ = value;
}

// optional sint32 WeaponMountPoint = 5 [default = 0];
inline bool SkillConfigBulletTrajectoryEvent::has_weaponmountpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillConfigBulletTrajectoryEvent::set_has_weaponmountpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_has_weaponmountpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_weaponmountpoint() {
  weaponmountpoint_ = 0;
  clear_has_weaponmountpoint();
}
inline ::google::protobuf::int32 SkillConfigBulletTrajectoryEvent::weaponmountpoint() const {
  return weaponmountpoint_;
}
inline void SkillConfigBulletTrajectoryEvent::set_weaponmountpoint(::google::protobuf::int32 value) {
  set_has_weaponmountpoint();
  weaponmountpoint_ = value;
}

// optional float OffsetX = 6 [default = -1];
inline bool SkillConfigBulletTrajectoryEvent::has_offsetx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillConfigBulletTrajectoryEvent::set_has_offsetx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_has_offsetx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_offsetx() {
  offsetx_ = -1;
  clear_has_offsetx();
}
inline float SkillConfigBulletTrajectoryEvent::offsetx() const {
  return offsetx_;
}
inline void SkillConfigBulletTrajectoryEvent::set_offsetx(float value) {
  set_has_offsetx();
  offsetx_ = value;
}

// optional float OffsetY = 7 [default = -1];
inline bool SkillConfigBulletTrajectoryEvent::has_offsety() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillConfigBulletTrajectoryEvent::set_has_offsety() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_has_offsety() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_offsety() {
  offsety_ = -1;
  clear_has_offsety();
}
inline float SkillConfigBulletTrajectoryEvent::offsety() const {
  return offsety_;
}
inline void SkillConfigBulletTrajectoryEvent::set_offsety(float value) {
  set_has_offsety();
  offsety_ = value;
}

// optional float OffsetZ = 8 [default = -1];
inline bool SkillConfigBulletTrajectoryEvent::has_offsetz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillConfigBulletTrajectoryEvent::set_has_offsetz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_has_offsetz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillConfigBulletTrajectoryEvent::clear_offsetz() {
  offsetz_ = -1;
  clear_has_offsetz();
}
inline float SkillConfigBulletTrajectoryEvent::offsetz() const {
  return offsetz_;
}
inline void SkillConfigBulletTrajectoryEvent::set_offsetz(float value) {
  set_has_offsetz();
  offsetz_ = value;
}

// -------------------------------------------------------------------

// SkillConfigCameraChangeInfo

// optional sint32 CameraChangeStartTime = 1 [default = -1];
inline bool SkillConfigCameraChangeInfo::has_camerachangestarttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillConfigCameraChangeInfo::set_has_camerachangestarttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillConfigCameraChangeInfo::clear_has_camerachangestarttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillConfigCameraChangeInfo::clear_camerachangestarttime() {
  camerachangestarttime_ = -1;
  clear_has_camerachangestarttime();
}
inline ::google::protobuf::int32 SkillConfigCameraChangeInfo::camerachangestarttime() const {
  return camerachangestarttime_;
}
inline void SkillConfigCameraChangeInfo::set_camerachangestarttime(::google::protobuf::int32 value) {
  set_has_camerachangestarttime();
  camerachangestarttime_ = value;
}

// optional float CameraFieldView = 2 [default = -1];
inline bool SkillConfigCameraChangeInfo::has_camerafieldview() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillConfigCameraChangeInfo::set_has_camerafieldview() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillConfigCameraChangeInfo::clear_has_camerafieldview() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillConfigCameraChangeInfo::clear_camerafieldview() {
  camerafieldview_ = -1;
  clear_has_camerafieldview();
}
inline float SkillConfigCameraChangeInfo::camerafieldview() const {
  return camerafieldview_;
}
inline void SkillConfigCameraChangeInfo::set_camerafieldview(float value) {
  set_has_camerafieldview();
  camerafieldview_ = value;
}

// optional sint32 CameraChangeEndTime = 3 [default = -1];
inline bool SkillConfigCameraChangeInfo::has_camerachangeendtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillConfigCameraChangeInfo::set_has_camerachangeendtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillConfigCameraChangeInfo::clear_has_camerachangeendtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillConfigCameraChangeInfo::clear_camerachangeendtime() {
  camerachangeendtime_ = -1;
  clear_has_camerachangeendtime();
}
inline ::google::protobuf::int32 SkillConfigCameraChangeInfo::camerachangeendtime() const {
  return camerachangeendtime_;
}
inline void SkillConfigCameraChangeInfo::set_camerachangeendtime(::google::protobuf::int32 value) {
  set_has_camerachangeendtime();
  camerachangeendtime_ = value;
}

// optional sint32 CameraRecoverTime = 4 [default = -1];
inline bool SkillConfigCameraChangeInfo::has_camerarecovertime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillConfigCameraChangeInfo::set_has_camerarecovertime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillConfigCameraChangeInfo::clear_has_camerarecovertime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillConfigCameraChangeInfo::clear_camerarecovertime() {
  camerarecovertime_ = -1;
  clear_has_camerarecovertime();
}
inline ::google::protobuf::int32 SkillConfigCameraChangeInfo::camerarecovertime() const {
  return camerarecovertime_;
}
inline void SkillConfigCameraChangeInfo::set_camerarecovertime(::google::protobuf::int32 value) {
  set_has_camerarecovertime();
  camerarecovertime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SkillConfigCliRpc_2eproto__INCLUDED
