// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleSPVPSvrRpc.proto

#ifndef PROTOBUF_BattleSPVPSvrRpc_2eproto__INCLUDED
#define PROTOBUF_BattleSPVPSvrRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleSPVPSvrRpc_2eproto();
void protobuf_AssignDesc_BattleSPVPSvrRpc_2eproto();
void protobuf_ShutdownFile_BattleSPVPSvrRpc_2eproto();

class BattleSPVPRpcCreateRoomSPVPAsk;
class BattleSPVPRpcCreateRoomSPVPReply;
class BattleSPVPUserP;

// ===================================================================

class BattleSPVPRpcCreateRoomSPVPAsk : public ::google::protobuf::Message {
 public:
  BattleSPVPRpcCreateRoomSPVPAsk();
  virtual ~BattleSPVPRpcCreateRoomSPVPAsk();

  BattleSPVPRpcCreateRoomSPVPAsk(const BattleSPVPRpcCreateRoomSPVPAsk& from);

  inline BattleSPVPRpcCreateRoomSPVPAsk& operator=(const BattleSPVPRpcCreateRoomSPVPAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleSPVPRpcCreateRoomSPVPAsk& default_instance();

  void Swap(BattleSPVPRpcCreateRoomSPVPAsk* other);

  // implements Message ----------------------------------------------

  BattleSPVPRpcCreateRoomSPVPAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleSPVPRpcCreateRoomSPVPAsk& from);
  void MergeFrom(const BattleSPVPRpcCreateRoomSPVPAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BattleSPVPUserP Members = 1;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 1;
  inline const ::BattleSPVPUserP& members(int index) const;
  inline ::BattleSPVPUserP* mutable_members(int index);
  inline ::BattleSPVPUserP* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleSPVPUserP >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleSPVPUserP >*
      mutable_members();

  // optional sint64 RoomID = 3 [default = -1];
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 3;
  inline ::google::protobuf::int64 roomid() const;
  inline void set_roomid(::google::protobuf::int64 value);

  // optional sint32 SceneConfId = 4 [default = 0];
  inline bool has_sceneconfid() const;
  inline void clear_sceneconfid();
  static const int kSceneConfIdFieldNumber = 4;
  inline ::google::protobuf::int32 sceneconfid() const;
  inline void set_sceneconfid(::google::protobuf::int32 value);

  // optional sint32 SceneID = 5 [default = 1];
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 5;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BattleSPVPRpcCreateRoomSPVPAsk)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_sceneconfid();
  inline void clear_has_sceneconfid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BattleSPVPUserP > members_;
  ::google::protobuf::int64 roomid_;
  ::google::protobuf::int32 sceneconfid_;
  ::google::protobuf::int32 sceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_BattleSPVPSvrRpc_2eproto();
  friend void protobuf_AssignDesc_BattleSPVPSvrRpc_2eproto();
  friend void protobuf_ShutdownFile_BattleSPVPSvrRpc_2eproto();

  void InitAsDefaultInstance();
  static BattleSPVPRpcCreateRoomSPVPAsk* default_instance_;
};
// -------------------------------------------------------------------

class BattleSPVPRpcCreateRoomSPVPReply : public ::google::protobuf::Message {
 public:
  BattleSPVPRpcCreateRoomSPVPReply();
  virtual ~BattleSPVPRpcCreateRoomSPVPReply();

  BattleSPVPRpcCreateRoomSPVPReply(const BattleSPVPRpcCreateRoomSPVPReply& from);

  inline BattleSPVPRpcCreateRoomSPVPReply& operator=(const BattleSPVPRpcCreateRoomSPVPReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleSPVPRpcCreateRoomSPVPReply& default_instance();

  void Swap(BattleSPVPRpcCreateRoomSPVPReply* other);

  // implements Message ----------------------------------------------

  BattleSPVPRpcCreateRoomSPVPReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleSPVPRpcCreateRoomSPVPReply& from);
  void MergeFrom(const BattleSPVPRpcCreateRoomSPVPReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BattleSPVPRpcCreateRoomSPVPReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BattleSPVPSvrRpc_2eproto();
  friend void protobuf_AssignDesc_BattleSPVPSvrRpc_2eproto();
  friend void protobuf_ShutdownFile_BattleSPVPSvrRpc_2eproto();

  void InitAsDefaultInstance();
  static BattleSPVPRpcCreateRoomSPVPReply* default_instance_;
};
// -------------------------------------------------------------------

class BattleSPVPUserP : public ::google::protobuf::Message {
 public:
  BattleSPVPUserP();
  virtual ~BattleSPVPUserP();

  BattleSPVPUserP(const BattleSPVPUserP& from);

  inline BattleSPVPUserP& operator=(const BattleSPVPUserP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleSPVPUserP& default_instance();

  void Swap(BattleSPVPUserP* other);

  // implements Message ----------------------------------------------

  BattleSPVPUserP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleSPVPUserP& from);
  void MergeFrom(const BattleSPVPUserP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 Uid = 1 [default = -1];
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // optional sint32 HreoID = 2 [default = -1];
  inline bool has_hreoid() const;
  inline void clear_hreoid();
  static const int kHreoIDFieldNumber = 2;
  inline ::google::protobuf::int32 hreoid() const;
  inline void set_hreoid(::google::protobuf::int32 value);

  // optional sint32 IsMonster = 3 [default = -1];
  inline bool has_ismonster() const;
  inline void clear_ismonster();
  static const int kIsMonsterFieldNumber = 3;
  inline ::google::protobuf::int32 ismonster() const;
  inline void set_ismonster(::google::protobuf::int32 value);

  // optional string Key = 4;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 4;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional sint32 TeamId = 5 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 5;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BattleSPVPUserP)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_hreoid();
  inline void clear_has_hreoid();
  inline void set_has_ismonster();
  inline void clear_has_ismonster();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 hreoid_;
  ::google::protobuf::int32 ismonster_;
  ::std::string* key_;
  ::google::protobuf::int32 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_BattleSPVPSvrRpc_2eproto();
  friend void protobuf_AssignDesc_BattleSPVPSvrRpc_2eproto();
  friend void protobuf_ShutdownFile_BattleSPVPSvrRpc_2eproto();

  void InitAsDefaultInstance();
  static BattleSPVPUserP* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleSPVPRpcCreateRoomSPVPAsk

// repeated .BattleSPVPUserP Members = 1;
inline int BattleSPVPRpcCreateRoomSPVPAsk::members_size() const {
  return members_.size();
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::clear_members() {
  members_.Clear();
}
inline const ::BattleSPVPUserP& BattleSPVPRpcCreateRoomSPVPAsk::members(int index) const {
  return members_.Get(index);
}
inline ::BattleSPVPUserP* BattleSPVPRpcCreateRoomSPVPAsk::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::BattleSPVPUserP* BattleSPVPRpcCreateRoomSPVPAsk::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleSPVPUserP >&
BattleSPVPRpcCreateRoomSPVPAsk::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleSPVPUserP >*
BattleSPVPRpcCreateRoomSPVPAsk::mutable_members() {
  return &members_;
}

// optional sint64 RoomID = 3 [default = -1];
inline bool BattleSPVPRpcCreateRoomSPVPAsk::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(-1);
  clear_has_roomid();
}
inline ::google::protobuf::int64 BattleSPVPRpcCreateRoomSPVPAsk::roomid() const {
  return roomid_;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::set_roomid(::google::protobuf::int64 value) {
  set_has_roomid();
  roomid_ = value;
}

// optional sint32 SceneConfId = 4 [default = 0];
inline bool BattleSPVPRpcCreateRoomSPVPAsk::has_sceneconfid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::set_has_sceneconfid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::clear_has_sceneconfid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::clear_sceneconfid() {
  sceneconfid_ = 0;
  clear_has_sceneconfid();
}
inline ::google::protobuf::int32 BattleSPVPRpcCreateRoomSPVPAsk::sceneconfid() const {
  return sceneconfid_;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::set_sceneconfid(::google::protobuf::int32 value) {
  set_has_sceneconfid();
  sceneconfid_ = value;
}

// optional sint32 SceneID = 5 [default = 1];
inline bool BattleSPVPRpcCreateRoomSPVPAsk::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::clear_sceneid() {
  sceneid_ = 1;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 BattleSPVPRpcCreateRoomSPVPAsk::sceneid() const {
  return sceneid_;
}
inline void BattleSPVPRpcCreateRoomSPVPAsk::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// -------------------------------------------------------------------

// BattleSPVPRpcCreateRoomSPVPReply

// optional sint32 Result = 1 [default = -9999];
inline bool BattleSPVPRpcCreateRoomSPVPReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleSPVPRpcCreateRoomSPVPReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleSPVPRpcCreateRoomSPVPReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleSPVPRpcCreateRoomSPVPReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 BattleSPVPRpcCreateRoomSPVPReply::result() const {
  return result_;
}
inline void BattleSPVPRpcCreateRoomSPVPReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// BattleSPVPUserP

// optional sint64 Uid = 1 [default = -1];
inline bool BattleSPVPUserP::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleSPVPUserP::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleSPVPUserP::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleSPVPUserP::clear_uid() {
  uid_ = GOOGLE_LONGLONG(-1);
  clear_has_uid();
}
inline ::google::protobuf::int64 BattleSPVPUserP::uid() const {
  return uid_;
}
inline void BattleSPVPUserP::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
}

// optional sint32 HreoID = 2 [default = -1];
inline bool BattleSPVPUserP::has_hreoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleSPVPUserP::set_has_hreoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleSPVPUserP::clear_has_hreoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleSPVPUserP::clear_hreoid() {
  hreoid_ = -1;
  clear_has_hreoid();
}
inline ::google::protobuf::int32 BattleSPVPUserP::hreoid() const {
  return hreoid_;
}
inline void BattleSPVPUserP::set_hreoid(::google::protobuf::int32 value) {
  set_has_hreoid();
  hreoid_ = value;
}

// optional sint32 IsMonster = 3 [default = -1];
inline bool BattleSPVPUserP::has_ismonster() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleSPVPUserP::set_has_ismonster() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleSPVPUserP::clear_has_ismonster() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleSPVPUserP::clear_ismonster() {
  ismonster_ = -1;
  clear_has_ismonster();
}
inline ::google::protobuf::int32 BattleSPVPUserP::ismonster() const {
  return ismonster_;
}
inline void BattleSPVPUserP::set_ismonster(::google::protobuf::int32 value) {
  set_has_ismonster();
  ismonster_ = value;
}

// optional string Key = 4;
inline bool BattleSPVPUserP::has_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleSPVPUserP::set_has_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleSPVPUserP::clear_has_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleSPVPUserP::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& BattleSPVPUserP::key() const {
  return *key_;
}
inline void BattleSPVPUserP::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void BattleSPVPUserP::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void BattleSPVPUserP::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleSPVPUserP::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* BattleSPVPUserP::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleSPVPUserP::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional sint32 TeamId = 5 [default = 0];
inline bool BattleSPVPUserP::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleSPVPUserP::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleSPVPUserP::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleSPVPUserP::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 BattleSPVPUserP::teamid() const {
  return teamid_;
}
inline void BattleSPVPUserP::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleSPVPSvrRpc_2eproto__INCLUDED
