// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EffectConfigCliRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EffectConfigCliRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* EffectConfigEffectGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EffectConfigEffectGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* EffectConfigEffect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EffectConfigEffect_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_EffectConfigCliRpc_2eproto() {
  protobuf_AddDesc_EffectConfigCliRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EffectConfigCliRpc.proto");
  GOOGLE_CHECK(file != NULL);
  EffectConfigEffectGroup_descriptor_ = file->message_type(0);
  static const int EffectConfigEffectGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffectGroup, effectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffectGroup, effectlist_),
  };
  EffectConfigEffectGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EffectConfigEffectGroup_descriptor_,
      EffectConfigEffectGroup::default_instance_,
      EffectConfigEffectGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffectGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffectGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EffectConfigEffectGroup));
  EffectConfigEffect_descriptor_ = file->message_type(1);
  static const int EffectConfigEffect_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffect, effectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffect, effecttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffect, effectparameter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffect, paramerlist_),
  };
  EffectConfigEffect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EffectConfigEffect_descriptor_,
      EffectConfigEffect::default_instance_,
      EffectConfigEffect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EffectConfigEffect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EffectConfigEffect));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EffectConfigCliRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EffectConfigEffectGroup_descriptor_, &EffectConfigEffectGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EffectConfigEffect_descriptor_, &EffectConfigEffect::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EffectConfigCliRpc_2eproto() {
  delete EffectConfigEffectGroup::default_instance_;
  delete EffectConfigEffectGroup_reflection_;
  delete EffectConfigEffect::default_instance_;
  delete EffectConfigEffect_reflection_;
}

void protobuf_AddDesc_EffectConfigCliRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030EffectConfigCliRpc.proto\032\022PublicStruct"
    ".proto\"V\n\027EffectConfigEffectGroup\022\022\n\nEff"
    "ectName\030\002 \001(\t\022\'\n\nEffectList\030\001 \003(\0132\023.Effe"
    "ctConfigEffect\"p\n\022EffectConfigEffect\022\022\n\n"
    "EffectName\030\001 \001(\t\022\025\n\nEffectType\030\002 \001(\021:\0010\022"
    "\032\n\017EffectParameter\030\003 \001(\021:\0010\022\023\n\013ParamerLi"
    "st\030\004 \003(\t", 248);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EffectConfigCliRpc.proto", &protobuf_RegisterTypes);
  EffectConfigEffectGroup::default_instance_ = new EffectConfigEffectGroup();
  EffectConfigEffect::default_instance_ = new EffectConfigEffect();
  EffectConfigEffectGroup::default_instance_->InitAsDefaultInstance();
  EffectConfigEffect::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EffectConfigCliRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EffectConfigCliRpc_2eproto {
  StaticDescriptorInitializer_EffectConfigCliRpc_2eproto() {
    protobuf_AddDesc_EffectConfigCliRpc_2eproto();
  }
} static_descriptor_initializer_EffectConfigCliRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EffectConfigEffectGroup::kEffectNameFieldNumber;
const int EffectConfigEffectGroup::kEffectListFieldNumber;
#endif  // !_MSC_VER

EffectConfigEffectGroup::EffectConfigEffectGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EffectConfigEffectGroup::InitAsDefaultInstance() {
}

EffectConfigEffectGroup::EffectConfigEffectGroup(const EffectConfigEffectGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EffectConfigEffectGroup::SharedCtor() {
  _cached_size_ = 0;
  effectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EffectConfigEffectGroup::~EffectConfigEffectGroup() {
  SharedDtor();
}

void EffectConfigEffectGroup::SharedDtor() {
  if (effectname_ != &::google::protobuf::internal::kEmptyString) {
    delete effectname_;
  }
  if (this != default_instance_) {
  }
}

void EffectConfigEffectGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EffectConfigEffectGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EffectConfigEffectGroup_descriptor_;
}

const EffectConfigEffectGroup& EffectConfigEffectGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EffectConfigCliRpc_2eproto();
  return *default_instance_;
}

EffectConfigEffectGroup* EffectConfigEffectGroup::default_instance_ = NULL;

EffectConfigEffectGroup* EffectConfigEffectGroup::New() const {
  return new EffectConfigEffectGroup;
}

void EffectConfigEffectGroup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_effectname()) {
      if (effectname_ != &::google::protobuf::internal::kEmptyString) {
        effectname_->clear();
      }
    }
  }
  effectlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EffectConfigEffectGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .EffectConfigEffect EffectList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EffectList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_effectlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_EffectList;
        if (input->ExpectTag(18)) goto parse_EffectName;
        break;
      }

      // optional string EffectName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EffectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effectname().data(), this->effectname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EffectConfigEffectGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .EffectConfigEffect EffectList = 1;
  for (int i = 0; i < this->effectlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->effectlist(i), output);
  }

  // optional string EffectName = 2;
  if (has_effectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->effectname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EffectConfigEffectGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .EffectConfigEffect EffectList = 1;
  for (int i = 0; i < this->effectlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->effectlist(i), target);
  }

  // optional string EffectName = 2;
  if (has_effectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->effectname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EffectConfigEffectGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string EffectName = 2;
    if (has_effectname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectname());
    }

  }
  // repeated .EffectConfigEffect EffectList = 1;
  total_size += 1 * this->effectlist_size();
  for (int i = 0; i < this->effectlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->effectlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EffectConfigEffectGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EffectConfigEffectGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EffectConfigEffectGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EffectConfigEffectGroup::MergeFrom(const EffectConfigEffectGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  effectlist_.MergeFrom(from.effectlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_effectname()) {
      set_effectname(from.effectname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EffectConfigEffectGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EffectConfigEffectGroup::CopyFrom(const EffectConfigEffectGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EffectConfigEffectGroup::IsInitialized() const {

  return true;
}

void EffectConfigEffectGroup::Swap(EffectConfigEffectGroup* other) {
  if (other != this) {
    std::swap(effectname_, other->effectname_);
    effectlist_.Swap(&other->effectlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EffectConfigEffectGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EffectConfigEffectGroup_descriptor_;
  metadata.reflection = EffectConfigEffectGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EffectConfigEffect::kEffectNameFieldNumber;
const int EffectConfigEffect::kEffectTypeFieldNumber;
const int EffectConfigEffect::kEffectParameterFieldNumber;
const int EffectConfigEffect::kParamerListFieldNumber;
#endif  // !_MSC_VER

EffectConfigEffect::EffectConfigEffect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EffectConfigEffect::InitAsDefaultInstance() {
}

EffectConfigEffect::EffectConfigEffect(const EffectConfigEffect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EffectConfigEffect::SharedCtor() {
  _cached_size_ = 0;
  effectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  effecttype_ = 0;
  effectparameter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EffectConfigEffect::~EffectConfigEffect() {
  SharedDtor();
}

void EffectConfigEffect::SharedDtor() {
  if (effectname_ != &::google::protobuf::internal::kEmptyString) {
    delete effectname_;
  }
  if (this != default_instance_) {
  }
}

void EffectConfigEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EffectConfigEffect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EffectConfigEffect_descriptor_;
}

const EffectConfigEffect& EffectConfigEffect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EffectConfigCliRpc_2eproto();
  return *default_instance_;
}

EffectConfigEffect* EffectConfigEffect::default_instance_ = NULL;

EffectConfigEffect* EffectConfigEffect::New() const {
  return new EffectConfigEffect;
}

void EffectConfigEffect::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_effectname()) {
      if (effectname_ != &::google::protobuf::internal::kEmptyString) {
        effectname_->clear();
      }
    }
    effecttype_ = 0;
    effectparameter_ = 0;
  }
  paramerlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EffectConfigEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string EffectName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effectname().data(), this->effectname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_EffectType;
        break;
      }

      // optional sint32 EffectType = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_EffectType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &effecttype_)));
          set_has_effecttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_EffectParameter;
        break;
      }

      // optional sint32 EffectParameter = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_EffectParameter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &effectparameter_)));
          set_has_effectparameter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ParamerList;
        break;
      }

      // repeated string ParamerList = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ParamerList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_paramerlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->paramerlist(this->paramerlist_size() - 1).data(),
            this->paramerlist(this->paramerlist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ParamerList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EffectConfigEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string EffectName = 1;
  if (has_effectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->effectname(), output);
  }

  // optional sint32 EffectType = 2 [default = 0];
  if (has_effecttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->effecttype(), output);
  }

  // optional sint32 EffectParameter = 3 [default = 0];
  if (has_effectparameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->effectparameter(), output);
  }

  // repeated string ParamerList = 4;
  for (int i = 0; i < this->paramerlist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->paramerlist(i).data(), this->paramerlist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->paramerlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EffectConfigEffect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string EffectName = 1;
  if (has_effectname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->effectname(), target);
  }

  // optional sint32 EffectType = 2 [default = 0];
  if (has_effecttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->effecttype(), target);
  }

  // optional sint32 EffectParameter = 3 [default = 0];
  if (has_effectparameter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->effectparameter(), target);
  }

  // repeated string ParamerList = 4;
  for (int i = 0; i < this->paramerlist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->paramerlist(i).data(), this->paramerlist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->paramerlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EffectConfigEffect::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string EffectName = 1;
    if (has_effectname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectname());
    }

    // optional sint32 EffectType = 2 [default = 0];
    if (has_effecttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->effecttype());
    }

    // optional sint32 EffectParameter = 3 [default = 0];
    if (has_effectparameter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->effectparameter());
    }

  }
  // repeated string ParamerList = 4;
  total_size += 1 * this->paramerlist_size();
  for (int i = 0; i < this->paramerlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->paramerlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EffectConfigEffect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EffectConfigEffect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EffectConfigEffect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EffectConfigEffect::MergeFrom(const EffectConfigEffect& from) {
  GOOGLE_CHECK_NE(&from, this);
  paramerlist_.MergeFrom(from.paramerlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_effectname()) {
      set_effectname(from.effectname());
    }
    if (from.has_effecttype()) {
      set_effecttype(from.effecttype());
    }
    if (from.has_effectparameter()) {
      set_effectparameter(from.effectparameter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EffectConfigEffect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EffectConfigEffect::CopyFrom(const EffectConfigEffect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EffectConfigEffect::IsInitialized() const {

  return true;
}

void EffectConfigEffect::Swap(EffectConfigEffect* other) {
  if (other != this) {
    std::swap(effectname_, other->effectname_);
    std::swap(effecttype_, other->effecttype_);
    std::swap(effectparameter_, other->effectparameter_);
    paramerlist_.Swap(&other->paramerlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EffectConfigEffect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EffectConfigEffect_descriptor_;
  metadata.reflection = EffectConfigEffect_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
