// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkillHsmConfigCliRpc.proto

#ifndef PROTOBUF_SkillHsmConfigCliRpc_2eproto__INCLUDED
#define PROTOBUF_SkillHsmConfigCliRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SkillHsmConfigCliRpc_2eproto();
void protobuf_AssignDesc_SkillHsmConfigCliRpc_2eproto();
void protobuf_ShutdownFile_SkillHsmConfigCliRpc_2eproto();

class SkillHsmConfigRpcSyncNotify;
class SkillHsmConfigRectT;
class SkillHsmConfigHSMParameter;
class SkillHsmConfigTransition;
class SkillHsmConfigNodeData;
class SkillHsmConfigHSMTreeData;
class SkillHsmConfigTransitionGroup;

// ===================================================================

class SkillHsmConfigRpcSyncNotify : public ::google::protobuf::Message {
 public:
  SkillHsmConfigRpcSyncNotify();
  virtual ~SkillHsmConfigRpcSyncNotify();

  SkillHsmConfigRpcSyncNotify(const SkillHsmConfigRpcSyncNotify& from);

  inline SkillHsmConfigRpcSyncNotify& operator=(const SkillHsmConfigRpcSyncNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillHsmConfigRpcSyncNotify& default_instance();

  void Swap(SkillHsmConfigRpcSyncNotify* other);

  // implements Message ----------------------------------------------

  SkillHsmConfigRpcSyncNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillHsmConfigRpcSyncNotify& from);
  void MergeFrom(const SkillHsmConfigRpcSyncNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SkillHsmConfigRpcSyncNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillHsmConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillHsmConfigRpcSyncNotify* default_instance_;
};
// -------------------------------------------------------------------

class SkillHsmConfigRectT : public ::google::protobuf::Message {
 public:
  SkillHsmConfigRectT();
  virtual ~SkillHsmConfigRectT();

  SkillHsmConfigRectT(const SkillHsmConfigRectT& from);

  inline SkillHsmConfigRectT& operator=(const SkillHsmConfigRectT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillHsmConfigRectT& default_instance();

  void Swap(SkillHsmConfigRectT* other);

  // implements Message ----------------------------------------------

  SkillHsmConfigRectT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillHsmConfigRectT& from);
  void MergeFrom(const SkillHsmConfigRectT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float X = 1 [default = -1];
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // optional float Y = 2 [default = -1];
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // optional float Width = 3 [default = -1];
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 3;
  inline float width() const;
  inline void set_width(float value);

  // optional float Height = 4 [default = -1];
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 4;
  inline float height() const;
  inline void set_height(float value);

  // @@protoc_insertion_point(class_scope:SkillHsmConfigRectT)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float width_;
  float height_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillHsmConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillHsmConfigRectT* default_instance_;
};
// -------------------------------------------------------------------

class SkillHsmConfigHSMParameter : public ::google::protobuf::Message {
 public:
  SkillHsmConfigHSMParameter();
  virtual ~SkillHsmConfigHSMParameter();

  SkillHsmConfigHSMParameter(const SkillHsmConfigHSMParameter& from);

  inline SkillHsmConfigHSMParameter& operator=(const SkillHsmConfigHSMParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillHsmConfigHSMParameter& default_instance();

  void Swap(SkillHsmConfigHSMParameter* other);

  // implements Message ----------------------------------------------

  SkillHsmConfigHSMParameter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillHsmConfigHSMParameter& from);
  void MergeFrom(const SkillHsmConfigHSMParameter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 ParameterType = 1 [default = 0];
  inline bool has_parametertype() const;
  inline void clear_parametertype();
  static const int kParameterTypeFieldNumber = 1;
  inline ::google::protobuf::int32 parametertype() const;
  inline void set_parametertype(::google::protobuf::int32 value);

  // optional string ParameterName = 2;
  inline bool has_parametername() const;
  inline void clear_parametername();
  static const int kParameterNameFieldNumber = 2;
  inline const ::std::string& parametername() const;
  inline void set_parametername(const ::std::string& value);
  inline void set_parametername(const char* value);
  inline void set_parametername(const char* value, size_t size);
  inline ::std::string* mutable_parametername();
  inline ::std::string* release_parametername();
  inline void set_allocated_parametername(::std::string* parametername);

  // optional string CNName = 9;
  inline bool has_cnname() const;
  inline void clear_cnname();
  static const int kCNNameFieldNumber = 9;
  inline const ::std::string& cnname() const;
  inline void set_cnname(const ::std::string& value);
  inline void set_cnname(const char* value);
  inline void set_cnname(const char* value, size_t size);
  inline ::std::string* mutable_cnname();
  inline ::std::string* release_cnname();
  inline void set_allocated_cnname(::std::string* cnname);

  // optional sint32 IntValue = 3 [default = -1];
  inline bool has_intvalue() const;
  inline void clear_intvalue();
  static const int kIntValueFieldNumber = 3;
  inline ::google::protobuf::int32 intvalue() const;
  inline void set_intvalue(::google::protobuf::int32 value);

  // optional float FloatValue = 4 [default = -1];
  inline bool has_floatvalue() const;
  inline void clear_floatvalue();
  static const int kFloatValueFieldNumber = 4;
  inline float floatvalue() const;
  inline void set_floatvalue(float value);

  // optional bool BoolValue = 5 [default = false];
  inline bool has_boolvalue() const;
  inline void clear_boolvalue();
  static const int kBoolValueFieldNumber = 5;
  inline bool boolvalue() const;
  inline void set_boolvalue(bool value);

  // optional sint32 Compare = 6 [default = 0];
  inline bool has_compare() const;
  inline void clear_compare();
  static const int kCompareFieldNumber = 6;
  inline ::google::protobuf::int32 compare() const;
  inline void set_compare(::google::protobuf::int32 value);

  // optional sint32 Index = 10 [default = -1];
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 10;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillHsmConfigHSMParameter)
 private:
  inline void set_has_parametertype();
  inline void clear_has_parametertype();
  inline void set_has_parametername();
  inline void clear_has_parametername();
  inline void set_has_cnname();
  inline void clear_has_cnname();
  inline void set_has_intvalue();
  inline void clear_has_intvalue();
  inline void set_has_floatvalue();
  inline void clear_has_floatvalue();
  inline void set_has_boolvalue();
  inline void clear_has_boolvalue();
  inline void set_has_compare();
  inline void clear_has_compare();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* parametername_;
  ::google::protobuf::int32 parametertype_;
  ::google::protobuf::int32 intvalue_;
  ::std::string* cnname_;
  float floatvalue_;
  bool boolvalue_;
  ::google::protobuf::int32 compare_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillHsmConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillHsmConfigHSMParameter* default_instance_;
};
// -------------------------------------------------------------------

class SkillHsmConfigTransition : public ::google::protobuf::Message {
 public:
  SkillHsmConfigTransition();
  virtual ~SkillHsmConfigTransition();

  SkillHsmConfigTransition(const SkillHsmConfigTransition& from);

  inline SkillHsmConfigTransition& operator=(const SkillHsmConfigTransition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillHsmConfigTransition& default_instance();

  void Swap(SkillHsmConfigTransition* other);

  // implements Message ----------------------------------------------

  SkillHsmConfigTransition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillHsmConfigTransition& from);
  void MergeFrom(const SkillHsmConfigTransition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 TransitionId = 1 [default = -1];
  inline bool has_transitionid() const;
  inline void clear_transitionid();
  static const int kTransitionIdFieldNumber = 1;
  inline ::google::protobuf::int32 transitionid() const;
  inline void set_transitionid(::google::protobuf::int32 value);

  // optional sint32 ToStateId = 2 [default = -1];
  inline bool has_tostateid() const;
  inline void clear_tostateid();
  static const int kToStateIdFieldNumber = 2;
  inline ::google::protobuf::int32 tostateid() const;
  inline void set_tostateid(::google::protobuf::int32 value);

  // repeated .SkillHsmConfigHSMParameter ParameterList = 3;
  inline int parameterlist_size() const;
  inline void clear_parameterlist();
  static const int kParameterListFieldNumber = 3;
  inline const ::SkillHsmConfigHSMParameter& parameterlist(int index) const;
  inline ::SkillHsmConfigHSMParameter* mutable_parameterlist(int index);
  inline ::SkillHsmConfigHSMParameter* add_parameterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >&
      parameterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >*
      mutable_parameterlist();

  // repeated .SkillHsmConfigTransitionGroup GroupList = 4;
  inline int grouplist_size() const;
  inline void clear_grouplist();
  static const int kGroupListFieldNumber = 4;
  inline const ::SkillHsmConfigTransitionGroup& grouplist(int index) const;
  inline ::SkillHsmConfigTransitionGroup* mutable_grouplist(int index);
  inline ::SkillHsmConfigTransitionGroup* add_grouplist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransitionGroup >&
      grouplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransitionGroup >*
      mutable_grouplist();

  // @@protoc_insertion_point(class_scope:SkillHsmConfigTransition)
 private:
  inline void set_has_transitionid();
  inline void clear_has_transitionid();
  inline void set_has_tostateid();
  inline void clear_has_tostateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 transitionid_;
  ::google::protobuf::int32 tostateid_;
  ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter > parameterlist_;
  ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransitionGroup > grouplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillHsmConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillHsmConfigTransition* default_instance_;
};
// -------------------------------------------------------------------

class SkillHsmConfigNodeData : public ::google::protobuf::Message {
 public:
  SkillHsmConfigNodeData();
  virtual ~SkillHsmConfigNodeData();

  SkillHsmConfigNodeData(const SkillHsmConfigNodeData& from);

  inline SkillHsmConfigNodeData& operator=(const SkillHsmConfigNodeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillHsmConfigNodeData& default_instance();

  void Swap(SkillHsmConfigNodeData* other);

  // implements Message ----------------------------------------------

  SkillHsmConfigNodeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillHsmConfigNodeData& from);
  void MergeFrom(const SkillHsmConfigNodeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional sint32 NodeType = 2 [default = -1];
  inline bool has_nodetype() const;
  inline void clear_nodetype();
  static const int kNodeTypeFieldNumber = 2;
  inline ::google::protobuf::int32 nodetype() const;
  inline void set_nodetype(::google::protobuf::int32 value);

  // repeated .SkillHsmConfigHSMParameter ParameterList = 3;
  inline int parameterlist_size() const;
  inline void clear_parameterlist();
  static const int kParameterListFieldNumber = 3;
  inline const ::SkillHsmConfigHSMParameter& parameterlist(int index) const;
  inline ::SkillHsmConfigHSMParameter* mutable_parameterlist(int index);
  inline ::SkillHsmConfigHSMParameter* add_parameterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >&
      parameterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >*
      mutable_parameterlist();

  // repeated .SkillHsmConfigTransition TransitionList = 4;
  inline int transitionlist_size() const;
  inline void clear_transitionlist();
  static const int kTransitionListFieldNumber = 4;
  inline const ::SkillHsmConfigTransition& transitionlist(int index) const;
  inline ::SkillHsmConfigTransition* mutable_transitionlist(int index);
  inline ::SkillHsmConfigTransition* add_transitionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransition >&
      transitionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransition >*
      mutable_transitionlist();

  // optional string NodeName = 5;
  inline bool has_nodename() const;
  inline void clear_nodename();
  static const int kNodeNameFieldNumber = 5;
  inline const ::std::string& nodename() const;
  inline void set_nodename(const ::std::string& value);
  inline void set_nodename(const char* value);
  inline void set_nodename(const char* value, size_t size);
  inline ::std::string* mutable_nodename();
  inline ::std::string* release_nodename();
  inline void set_allocated_nodename(::std::string* nodename);

  // optional sint32 Identification = 6 [default = -1];
  inline bool has_identification() const;
  inline void clear_identification();
  static const int kIdentificationFieldNumber = 6;
  inline ::google::protobuf::int32 identification() const;
  inline void set_identification(::google::protobuf::int32 value);

  // optional string Descript = 7;
  inline bool has_descript() const;
  inline void clear_descript();
  static const int kDescriptFieldNumber = 7;
  inline const ::std::string& descript() const;
  inline void set_descript(const ::std::string& value);
  inline void set_descript(const char* value);
  inline void set_descript(const char* value, size_t size);
  inline ::std::string* mutable_descript();
  inline ::std::string* release_descript();
  inline void set_allocated_descript(::std::string* descript);

  // optional .SkillHsmConfigRectT Position = 8;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 8;
  inline const ::SkillHsmConfigRectT& position() const;
  inline ::SkillHsmConfigRectT* mutable_position();
  inline ::SkillHsmConfigRectT* release_position();
  inline void set_allocated_position(::SkillHsmConfigRectT* position);

  // repeated sint32 ChildIdList = 10;
  inline int childidlist_size() const;
  inline void clear_childidlist();
  static const int kChildIdListFieldNumber = 10;
  inline ::google::protobuf::int32 childidlist(int index) const;
  inline void set_childidlist(int index, ::google::protobuf::int32 value);
  inline void add_childidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      childidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_childidlist();

  // optional sint32 ParentId = 11 [default = -1];
  inline bool has_parentid() const;
  inline void clear_parentid();
  static const int kParentIdFieldNumber = 11;
  inline ::google::protobuf::int32 parentid() const;
  inline void set_parentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SkillHsmConfigNodeData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_nodetype();
  inline void clear_has_nodetype();
  inline void set_has_nodename();
  inline void clear_has_nodename();
  inline void set_has_identification();
  inline void clear_has_identification();
  inline void set_has_descript();
  inline void clear_has_descript();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_parentid();
  inline void clear_has_parentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 nodetype_;
  ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter > parameterlist_;
  ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransition > transitionlist_;
  ::std::string* nodename_;
  ::std::string* descript_;
  ::SkillHsmConfigRectT* position_;
  ::google::protobuf::int32 identification_;
  ::google::protobuf::int32 parentid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > childidlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillHsmConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillHsmConfigNodeData* default_instance_;
};
// -------------------------------------------------------------------

class SkillHsmConfigHSMTreeData : public ::google::protobuf::Message {
 public:
  SkillHsmConfigHSMTreeData();
  virtual ~SkillHsmConfigHSMTreeData();

  SkillHsmConfigHSMTreeData(const SkillHsmConfigHSMTreeData& from);

  inline SkillHsmConfigHSMTreeData& operator=(const SkillHsmConfigHSMTreeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillHsmConfigHSMTreeData& default_instance();

  void Swap(SkillHsmConfigHSMTreeData* other);

  // implements Message ----------------------------------------------

  SkillHsmConfigHSMTreeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillHsmConfigHSMTreeData& from);
  void MergeFrom(const SkillHsmConfigHSMTreeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FileName = 7;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 7;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional sint32 DefaultStateId = 1 [default = -1];
  inline bool has_defaultstateid() const;
  inline void clear_defaultstateid();
  static const int kDefaultStateIdFieldNumber = 1;
  inline ::google::protobuf::int32 defaultstateid() const;
  inline void set_defaultstateid(::google::protobuf::int32 value);

  // repeated .SkillHsmConfigNodeData NodeList = 2;
  inline int nodelist_size() const;
  inline void clear_nodelist();
  static const int kNodeListFieldNumber = 2;
  inline const ::SkillHsmConfigNodeData& nodelist(int index) const;
  inline ::SkillHsmConfigNodeData* mutable_nodelist(int index);
  inline ::SkillHsmConfigNodeData* add_nodelist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigNodeData >&
      nodelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigNodeData >*
      mutable_nodelist();

  // repeated .SkillHsmConfigHSMParameter ParameterList = 3;
  inline int parameterlist_size() const;
  inline void clear_parameterlist();
  static const int kParameterListFieldNumber = 3;
  inline const ::SkillHsmConfigHSMParameter& parameterlist(int index) const;
  inline ::SkillHsmConfigHSMParameter* mutable_parameterlist(int index);
  inline ::SkillHsmConfigHSMParameter* add_parameterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >&
      parameterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >*
      mutable_parameterlist();

  // optional string Descript = 4;
  inline bool has_descript() const;
  inline void clear_descript();
  static const int kDescriptFieldNumber = 4;
  inline const ::std::string& descript() const;
  inline void set_descript(const ::std::string& value);
  inline void set_descript(const char* value);
  inline void set_descript(const char* value, size_t size);
  inline ::std::string* mutable_descript();
  inline ::std::string* release_descript();
  inline void set_allocated_descript(::std::string* descript);

  // @@protoc_insertion_point(class_scope:SkillHsmConfigHSMTreeData)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_defaultstateid();
  inline void clear_has_defaultstateid();
  inline void set_has_descript();
  inline void clear_has_descript();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;
  ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigNodeData > nodelist_;
  ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter > parameterlist_;
  ::std::string* descript_;
  ::google::protobuf::int32 defaultstateid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillHsmConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillHsmConfigHSMTreeData* default_instance_;
};
// -------------------------------------------------------------------

class SkillHsmConfigTransitionGroup : public ::google::protobuf::Message {
 public:
  SkillHsmConfigTransitionGroup();
  virtual ~SkillHsmConfigTransitionGroup();

  SkillHsmConfigTransitionGroup(const SkillHsmConfigTransitionGroup& from);

  inline SkillHsmConfigTransitionGroup& operator=(const SkillHsmConfigTransitionGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillHsmConfigTransitionGroup& default_instance();

  void Swap(SkillHsmConfigTransitionGroup* other);

  // implements Message ----------------------------------------------

  SkillHsmConfigTransitionGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillHsmConfigTransitionGroup& from);
  void MergeFrom(const SkillHsmConfigTransitionGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Index = 1 [default = -1];
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // repeated string ParameterList = 2;
  inline int parameterlist_size() const;
  inline void clear_parameterlist();
  static const int kParameterListFieldNumber = 2;
  inline const ::std::string& parameterlist(int index) const;
  inline ::std::string* mutable_parameterlist(int index);
  inline void set_parameterlist(int index, const ::std::string& value);
  inline void set_parameterlist(int index, const char* value);
  inline void set_parameterlist(int index, const char* value, size_t size);
  inline ::std::string* add_parameterlist();
  inline void add_parameterlist(const ::std::string& value);
  inline void add_parameterlist(const char* value);
  inline void add_parameterlist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& parameterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_parameterlist();

  // @@protoc_insertion_point(class_scope:SkillHsmConfigTransitionGroup)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> parameterlist_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_AssignDesc_SkillHsmConfigCliRpc_2eproto();
  friend void protobuf_ShutdownFile_SkillHsmConfigCliRpc_2eproto();

  void InitAsDefaultInstance();
  static SkillHsmConfigTransitionGroup* default_instance_;
};
// ===================================================================


// ===================================================================

// SkillHsmConfigRpcSyncNotify

// -------------------------------------------------------------------

// SkillHsmConfigRectT

// optional float X = 1 [default = -1];
inline bool SkillHsmConfigRectT::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillHsmConfigRectT::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillHsmConfigRectT::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillHsmConfigRectT::clear_x() {
  x_ = -1;
  clear_has_x();
}
inline float SkillHsmConfigRectT::x() const {
  return x_;
}
inline void SkillHsmConfigRectT::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float Y = 2 [default = -1];
inline bool SkillHsmConfigRectT::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillHsmConfigRectT::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillHsmConfigRectT::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillHsmConfigRectT::clear_y() {
  y_ = -1;
  clear_has_y();
}
inline float SkillHsmConfigRectT::y() const {
  return y_;
}
inline void SkillHsmConfigRectT::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional float Width = 3 [default = -1];
inline bool SkillHsmConfigRectT::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillHsmConfigRectT::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillHsmConfigRectT::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillHsmConfigRectT::clear_width() {
  width_ = -1;
  clear_has_width();
}
inline float SkillHsmConfigRectT::width() const {
  return width_;
}
inline void SkillHsmConfigRectT::set_width(float value) {
  set_has_width();
  width_ = value;
}

// optional float Height = 4 [default = -1];
inline bool SkillHsmConfigRectT::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillHsmConfigRectT::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillHsmConfigRectT::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillHsmConfigRectT::clear_height() {
  height_ = -1;
  clear_has_height();
}
inline float SkillHsmConfigRectT::height() const {
  return height_;
}
inline void SkillHsmConfigRectT::set_height(float value) {
  set_has_height();
  height_ = value;
}

// -------------------------------------------------------------------

// SkillHsmConfigHSMParameter

// optional sint32 ParameterType = 1 [default = 0];
inline bool SkillHsmConfigHSMParameter::has_parametertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillHsmConfigHSMParameter::set_has_parametertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillHsmConfigHSMParameter::clear_has_parametertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillHsmConfigHSMParameter::clear_parametertype() {
  parametertype_ = 0;
  clear_has_parametertype();
}
inline ::google::protobuf::int32 SkillHsmConfigHSMParameter::parametertype() const {
  return parametertype_;
}
inline void SkillHsmConfigHSMParameter::set_parametertype(::google::protobuf::int32 value) {
  set_has_parametertype();
  parametertype_ = value;
}

// optional string ParameterName = 2;
inline bool SkillHsmConfigHSMParameter::has_parametername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillHsmConfigHSMParameter::set_has_parametername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillHsmConfigHSMParameter::clear_has_parametername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillHsmConfigHSMParameter::clear_parametername() {
  if (parametername_ != &::google::protobuf::internal::kEmptyString) {
    parametername_->clear();
  }
  clear_has_parametername();
}
inline const ::std::string& SkillHsmConfigHSMParameter::parametername() const {
  return *parametername_;
}
inline void SkillHsmConfigHSMParameter::set_parametername(const ::std::string& value) {
  set_has_parametername();
  if (parametername_ == &::google::protobuf::internal::kEmptyString) {
    parametername_ = new ::std::string;
  }
  parametername_->assign(value);
}
inline void SkillHsmConfigHSMParameter::set_parametername(const char* value) {
  set_has_parametername();
  if (parametername_ == &::google::protobuf::internal::kEmptyString) {
    parametername_ = new ::std::string;
  }
  parametername_->assign(value);
}
inline void SkillHsmConfigHSMParameter::set_parametername(const char* value, size_t size) {
  set_has_parametername();
  if (parametername_ == &::google::protobuf::internal::kEmptyString) {
    parametername_ = new ::std::string;
  }
  parametername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SkillHsmConfigHSMParameter::mutable_parametername() {
  set_has_parametername();
  if (parametername_ == &::google::protobuf::internal::kEmptyString) {
    parametername_ = new ::std::string;
  }
  return parametername_;
}
inline ::std::string* SkillHsmConfigHSMParameter::release_parametername() {
  clear_has_parametername();
  if (parametername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = parametername_;
    parametername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SkillHsmConfigHSMParameter::set_allocated_parametername(::std::string* parametername) {
  if (parametername_ != &::google::protobuf::internal::kEmptyString) {
    delete parametername_;
  }
  if (parametername) {
    set_has_parametername();
    parametername_ = parametername;
  } else {
    clear_has_parametername();
    parametername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string CNName = 9;
inline bool SkillHsmConfigHSMParameter::has_cnname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillHsmConfigHSMParameter::set_has_cnname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillHsmConfigHSMParameter::clear_has_cnname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillHsmConfigHSMParameter::clear_cnname() {
  if (cnname_ != &::google::protobuf::internal::kEmptyString) {
    cnname_->clear();
  }
  clear_has_cnname();
}
inline const ::std::string& SkillHsmConfigHSMParameter::cnname() const {
  return *cnname_;
}
inline void SkillHsmConfigHSMParameter::set_cnname(const ::std::string& value) {
  set_has_cnname();
  if (cnname_ == &::google::protobuf::internal::kEmptyString) {
    cnname_ = new ::std::string;
  }
  cnname_->assign(value);
}
inline void SkillHsmConfigHSMParameter::set_cnname(const char* value) {
  set_has_cnname();
  if (cnname_ == &::google::protobuf::internal::kEmptyString) {
    cnname_ = new ::std::string;
  }
  cnname_->assign(value);
}
inline void SkillHsmConfigHSMParameter::set_cnname(const char* value, size_t size) {
  set_has_cnname();
  if (cnname_ == &::google::protobuf::internal::kEmptyString) {
    cnname_ = new ::std::string;
  }
  cnname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SkillHsmConfigHSMParameter::mutable_cnname() {
  set_has_cnname();
  if (cnname_ == &::google::protobuf::internal::kEmptyString) {
    cnname_ = new ::std::string;
  }
  return cnname_;
}
inline ::std::string* SkillHsmConfigHSMParameter::release_cnname() {
  clear_has_cnname();
  if (cnname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cnname_;
    cnname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SkillHsmConfigHSMParameter::set_allocated_cnname(::std::string* cnname) {
  if (cnname_ != &::google::protobuf::internal::kEmptyString) {
    delete cnname_;
  }
  if (cnname) {
    set_has_cnname();
    cnname_ = cnname;
  } else {
    clear_has_cnname();
    cnname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional sint32 IntValue = 3 [default = -1];
inline bool SkillHsmConfigHSMParameter::has_intvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SkillHsmConfigHSMParameter::set_has_intvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SkillHsmConfigHSMParameter::clear_has_intvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SkillHsmConfigHSMParameter::clear_intvalue() {
  intvalue_ = -1;
  clear_has_intvalue();
}
inline ::google::protobuf::int32 SkillHsmConfigHSMParameter::intvalue() const {
  return intvalue_;
}
inline void SkillHsmConfigHSMParameter::set_intvalue(::google::protobuf::int32 value) {
  set_has_intvalue();
  intvalue_ = value;
}

// optional float FloatValue = 4 [default = -1];
inline bool SkillHsmConfigHSMParameter::has_floatvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillHsmConfigHSMParameter::set_has_floatvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillHsmConfigHSMParameter::clear_has_floatvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillHsmConfigHSMParameter::clear_floatvalue() {
  floatvalue_ = -1;
  clear_has_floatvalue();
}
inline float SkillHsmConfigHSMParameter::floatvalue() const {
  return floatvalue_;
}
inline void SkillHsmConfigHSMParameter::set_floatvalue(float value) {
  set_has_floatvalue();
  floatvalue_ = value;
}

// optional bool BoolValue = 5 [default = false];
inline bool SkillHsmConfigHSMParameter::has_boolvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillHsmConfigHSMParameter::set_has_boolvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillHsmConfigHSMParameter::clear_has_boolvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillHsmConfigHSMParameter::clear_boolvalue() {
  boolvalue_ = false;
  clear_has_boolvalue();
}
inline bool SkillHsmConfigHSMParameter::boolvalue() const {
  return boolvalue_;
}
inline void SkillHsmConfigHSMParameter::set_boolvalue(bool value) {
  set_has_boolvalue();
  boolvalue_ = value;
}

// optional sint32 Compare = 6 [default = 0];
inline bool SkillHsmConfigHSMParameter::has_compare() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillHsmConfigHSMParameter::set_has_compare() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillHsmConfigHSMParameter::clear_has_compare() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillHsmConfigHSMParameter::clear_compare() {
  compare_ = 0;
  clear_has_compare();
}
inline ::google::protobuf::int32 SkillHsmConfigHSMParameter::compare() const {
  return compare_;
}
inline void SkillHsmConfigHSMParameter::set_compare(::google::protobuf::int32 value) {
  set_has_compare();
  compare_ = value;
}

// optional sint32 Index = 10 [default = -1];
inline bool SkillHsmConfigHSMParameter::has_index() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SkillHsmConfigHSMParameter::set_has_index() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SkillHsmConfigHSMParameter::clear_has_index() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SkillHsmConfigHSMParameter::clear_index() {
  index_ = -1;
  clear_has_index();
}
inline ::google::protobuf::int32 SkillHsmConfigHSMParameter::index() const {
  return index_;
}
inline void SkillHsmConfigHSMParameter::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// SkillHsmConfigTransition

// optional sint32 TransitionId = 1 [default = -1];
inline bool SkillHsmConfigTransition::has_transitionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillHsmConfigTransition::set_has_transitionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillHsmConfigTransition::clear_has_transitionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillHsmConfigTransition::clear_transitionid() {
  transitionid_ = -1;
  clear_has_transitionid();
}
inline ::google::protobuf::int32 SkillHsmConfigTransition::transitionid() const {
  return transitionid_;
}
inline void SkillHsmConfigTransition::set_transitionid(::google::protobuf::int32 value) {
  set_has_transitionid();
  transitionid_ = value;
}

// optional sint32 ToStateId = 2 [default = -1];
inline bool SkillHsmConfigTransition::has_tostateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillHsmConfigTransition::set_has_tostateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillHsmConfigTransition::clear_has_tostateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillHsmConfigTransition::clear_tostateid() {
  tostateid_ = -1;
  clear_has_tostateid();
}
inline ::google::protobuf::int32 SkillHsmConfigTransition::tostateid() const {
  return tostateid_;
}
inline void SkillHsmConfigTransition::set_tostateid(::google::protobuf::int32 value) {
  set_has_tostateid();
  tostateid_ = value;
}

// repeated .SkillHsmConfigHSMParameter ParameterList = 3;
inline int SkillHsmConfigTransition::parameterlist_size() const {
  return parameterlist_.size();
}
inline void SkillHsmConfigTransition::clear_parameterlist() {
  parameterlist_.Clear();
}
inline const ::SkillHsmConfigHSMParameter& SkillHsmConfigTransition::parameterlist(int index) const {
  return parameterlist_.Get(index);
}
inline ::SkillHsmConfigHSMParameter* SkillHsmConfigTransition::mutable_parameterlist(int index) {
  return parameterlist_.Mutable(index);
}
inline ::SkillHsmConfigHSMParameter* SkillHsmConfigTransition::add_parameterlist() {
  return parameterlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >&
SkillHsmConfigTransition::parameterlist() const {
  return parameterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >*
SkillHsmConfigTransition::mutable_parameterlist() {
  return &parameterlist_;
}

// repeated .SkillHsmConfigTransitionGroup GroupList = 4;
inline int SkillHsmConfigTransition::grouplist_size() const {
  return grouplist_.size();
}
inline void SkillHsmConfigTransition::clear_grouplist() {
  grouplist_.Clear();
}
inline const ::SkillHsmConfigTransitionGroup& SkillHsmConfigTransition::grouplist(int index) const {
  return grouplist_.Get(index);
}
inline ::SkillHsmConfigTransitionGroup* SkillHsmConfigTransition::mutable_grouplist(int index) {
  return grouplist_.Mutable(index);
}
inline ::SkillHsmConfigTransitionGroup* SkillHsmConfigTransition::add_grouplist() {
  return grouplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransitionGroup >&
SkillHsmConfigTransition::grouplist() const {
  return grouplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransitionGroup >*
SkillHsmConfigTransition::mutable_grouplist() {
  return &grouplist_;
}

// -------------------------------------------------------------------

// SkillHsmConfigNodeData

// optional sint32 Id = 1 [default = -1];
inline bool SkillHsmConfigNodeData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillHsmConfigNodeData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillHsmConfigNodeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillHsmConfigNodeData::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 SkillHsmConfigNodeData::id() const {
  return id_;
}
inline void SkillHsmConfigNodeData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional sint32 NodeType = 2 [default = -1];
inline bool SkillHsmConfigNodeData::has_nodetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillHsmConfigNodeData::set_has_nodetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillHsmConfigNodeData::clear_has_nodetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillHsmConfigNodeData::clear_nodetype() {
  nodetype_ = -1;
  clear_has_nodetype();
}
inline ::google::protobuf::int32 SkillHsmConfigNodeData::nodetype() const {
  return nodetype_;
}
inline void SkillHsmConfigNodeData::set_nodetype(::google::protobuf::int32 value) {
  set_has_nodetype();
  nodetype_ = value;
}

// repeated .SkillHsmConfigHSMParameter ParameterList = 3;
inline int SkillHsmConfigNodeData::parameterlist_size() const {
  return parameterlist_.size();
}
inline void SkillHsmConfigNodeData::clear_parameterlist() {
  parameterlist_.Clear();
}
inline const ::SkillHsmConfigHSMParameter& SkillHsmConfigNodeData::parameterlist(int index) const {
  return parameterlist_.Get(index);
}
inline ::SkillHsmConfigHSMParameter* SkillHsmConfigNodeData::mutable_parameterlist(int index) {
  return parameterlist_.Mutable(index);
}
inline ::SkillHsmConfigHSMParameter* SkillHsmConfigNodeData::add_parameterlist() {
  return parameterlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >&
SkillHsmConfigNodeData::parameterlist() const {
  return parameterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >*
SkillHsmConfigNodeData::mutable_parameterlist() {
  return &parameterlist_;
}

// repeated .SkillHsmConfigTransition TransitionList = 4;
inline int SkillHsmConfigNodeData::transitionlist_size() const {
  return transitionlist_.size();
}
inline void SkillHsmConfigNodeData::clear_transitionlist() {
  transitionlist_.Clear();
}
inline const ::SkillHsmConfigTransition& SkillHsmConfigNodeData::transitionlist(int index) const {
  return transitionlist_.Get(index);
}
inline ::SkillHsmConfigTransition* SkillHsmConfigNodeData::mutable_transitionlist(int index) {
  return transitionlist_.Mutable(index);
}
inline ::SkillHsmConfigTransition* SkillHsmConfigNodeData::add_transitionlist() {
  return transitionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransition >&
SkillHsmConfigNodeData::transitionlist() const {
  return transitionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigTransition >*
SkillHsmConfigNodeData::mutable_transitionlist() {
  return &transitionlist_;
}

// optional string NodeName = 5;
inline bool SkillHsmConfigNodeData::has_nodename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillHsmConfigNodeData::set_has_nodename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillHsmConfigNodeData::clear_has_nodename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillHsmConfigNodeData::clear_nodename() {
  if (nodename_ != &::google::protobuf::internal::kEmptyString) {
    nodename_->clear();
  }
  clear_has_nodename();
}
inline const ::std::string& SkillHsmConfigNodeData::nodename() const {
  return *nodename_;
}
inline void SkillHsmConfigNodeData::set_nodename(const ::std::string& value) {
  set_has_nodename();
  if (nodename_ == &::google::protobuf::internal::kEmptyString) {
    nodename_ = new ::std::string;
  }
  nodename_->assign(value);
}
inline void SkillHsmConfigNodeData::set_nodename(const char* value) {
  set_has_nodename();
  if (nodename_ == &::google::protobuf::internal::kEmptyString) {
    nodename_ = new ::std::string;
  }
  nodename_->assign(value);
}
inline void SkillHsmConfigNodeData::set_nodename(const char* value, size_t size) {
  set_has_nodename();
  if (nodename_ == &::google::protobuf::internal::kEmptyString) {
    nodename_ = new ::std::string;
  }
  nodename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SkillHsmConfigNodeData::mutable_nodename() {
  set_has_nodename();
  if (nodename_ == &::google::protobuf::internal::kEmptyString) {
    nodename_ = new ::std::string;
  }
  return nodename_;
}
inline ::std::string* SkillHsmConfigNodeData::release_nodename() {
  clear_has_nodename();
  if (nodename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nodename_;
    nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SkillHsmConfigNodeData::set_allocated_nodename(::std::string* nodename) {
  if (nodename_ != &::google::protobuf::internal::kEmptyString) {
    delete nodename_;
  }
  if (nodename) {
    set_has_nodename();
    nodename_ = nodename;
  } else {
    clear_has_nodename();
    nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional sint32 Identification = 6 [default = -1];
inline bool SkillHsmConfigNodeData::has_identification() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SkillHsmConfigNodeData::set_has_identification() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SkillHsmConfigNodeData::clear_has_identification() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SkillHsmConfigNodeData::clear_identification() {
  identification_ = -1;
  clear_has_identification();
}
inline ::google::protobuf::int32 SkillHsmConfigNodeData::identification() const {
  return identification_;
}
inline void SkillHsmConfigNodeData::set_identification(::google::protobuf::int32 value) {
  set_has_identification();
  identification_ = value;
}

// optional string Descript = 7;
inline bool SkillHsmConfigNodeData::has_descript() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SkillHsmConfigNodeData::set_has_descript() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SkillHsmConfigNodeData::clear_has_descript() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SkillHsmConfigNodeData::clear_descript() {
  if (descript_ != &::google::protobuf::internal::kEmptyString) {
    descript_->clear();
  }
  clear_has_descript();
}
inline const ::std::string& SkillHsmConfigNodeData::descript() const {
  return *descript_;
}
inline void SkillHsmConfigNodeData::set_descript(const ::std::string& value) {
  set_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    descript_ = new ::std::string;
  }
  descript_->assign(value);
}
inline void SkillHsmConfigNodeData::set_descript(const char* value) {
  set_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    descript_ = new ::std::string;
  }
  descript_->assign(value);
}
inline void SkillHsmConfigNodeData::set_descript(const char* value, size_t size) {
  set_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    descript_ = new ::std::string;
  }
  descript_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SkillHsmConfigNodeData::mutable_descript() {
  set_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    descript_ = new ::std::string;
  }
  return descript_;
}
inline ::std::string* SkillHsmConfigNodeData::release_descript() {
  clear_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = descript_;
    descript_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SkillHsmConfigNodeData::set_allocated_descript(::std::string* descript) {
  if (descript_ != &::google::protobuf::internal::kEmptyString) {
    delete descript_;
  }
  if (descript) {
    set_has_descript();
    descript_ = descript;
  } else {
    clear_has_descript();
    descript_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .SkillHsmConfigRectT Position = 8;
inline bool SkillHsmConfigNodeData::has_position() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SkillHsmConfigNodeData::set_has_position() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SkillHsmConfigNodeData::clear_has_position() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SkillHsmConfigNodeData::clear_position() {
  if (position_ != NULL) position_->::SkillHsmConfigRectT::Clear();
  clear_has_position();
}
inline const ::SkillHsmConfigRectT& SkillHsmConfigNodeData::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::SkillHsmConfigRectT* SkillHsmConfigNodeData::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::SkillHsmConfigRectT;
  return position_;
}
inline ::SkillHsmConfigRectT* SkillHsmConfigNodeData::release_position() {
  clear_has_position();
  ::SkillHsmConfigRectT* temp = position_;
  position_ = NULL;
  return temp;
}
inline void SkillHsmConfigNodeData::set_allocated_position(::SkillHsmConfigRectT* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// repeated sint32 ChildIdList = 10;
inline int SkillHsmConfigNodeData::childidlist_size() const {
  return childidlist_.size();
}
inline void SkillHsmConfigNodeData::clear_childidlist() {
  childidlist_.Clear();
}
inline ::google::protobuf::int32 SkillHsmConfigNodeData::childidlist(int index) const {
  return childidlist_.Get(index);
}
inline void SkillHsmConfigNodeData::set_childidlist(int index, ::google::protobuf::int32 value) {
  childidlist_.Set(index, value);
}
inline void SkillHsmConfigNodeData::add_childidlist(::google::protobuf::int32 value) {
  childidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SkillHsmConfigNodeData::childidlist() const {
  return childidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SkillHsmConfigNodeData::mutable_childidlist() {
  return &childidlist_;
}

// optional sint32 ParentId = 11 [default = -1];
inline bool SkillHsmConfigNodeData::has_parentid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SkillHsmConfigNodeData::set_has_parentid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SkillHsmConfigNodeData::clear_has_parentid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SkillHsmConfigNodeData::clear_parentid() {
  parentid_ = -1;
  clear_has_parentid();
}
inline ::google::protobuf::int32 SkillHsmConfigNodeData::parentid() const {
  return parentid_;
}
inline void SkillHsmConfigNodeData::set_parentid(::google::protobuf::int32 value) {
  set_has_parentid();
  parentid_ = value;
}

// -------------------------------------------------------------------

// SkillHsmConfigHSMTreeData

// optional string FileName = 7;
inline bool SkillHsmConfigHSMTreeData::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillHsmConfigHSMTreeData::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillHsmConfigHSMTreeData::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillHsmConfigHSMTreeData::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& SkillHsmConfigHSMTreeData::filename() const {
  return *filename_;
}
inline void SkillHsmConfigHSMTreeData::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void SkillHsmConfigHSMTreeData::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void SkillHsmConfigHSMTreeData::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SkillHsmConfigHSMTreeData::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* SkillHsmConfigHSMTreeData::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SkillHsmConfigHSMTreeData::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional sint32 DefaultStateId = 1 [default = -1];
inline bool SkillHsmConfigHSMTreeData::has_defaultstateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillHsmConfigHSMTreeData::set_has_defaultstateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillHsmConfigHSMTreeData::clear_has_defaultstateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillHsmConfigHSMTreeData::clear_defaultstateid() {
  defaultstateid_ = -1;
  clear_has_defaultstateid();
}
inline ::google::protobuf::int32 SkillHsmConfigHSMTreeData::defaultstateid() const {
  return defaultstateid_;
}
inline void SkillHsmConfigHSMTreeData::set_defaultstateid(::google::protobuf::int32 value) {
  set_has_defaultstateid();
  defaultstateid_ = value;
}

// repeated .SkillHsmConfigNodeData NodeList = 2;
inline int SkillHsmConfigHSMTreeData::nodelist_size() const {
  return nodelist_.size();
}
inline void SkillHsmConfigHSMTreeData::clear_nodelist() {
  nodelist_.Clear();
}
inline const ::SkillHsmConfigNodeData& SkillHsmConfigHSMTreeData::nodelist(int index) const {
  return nodelist_.Get(index);
}
inline ::SkillHsmConfigNodeData* SkillHsmConfigHSMTreeData::mutable_nodelist(int index) {
  return nodelist_.Mutable(index);
}
inline ::SkillHsmConfigNodeData* SkillHsmConfigHSMTreeData::add_nodelist() {
  return nodelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigNodeData >&
SkillHsmConfigHSMTreeData::nodelist() const {
  return nodelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigNodeData >*
SkillHsmConfigHSMTreeData::mutable_nodelist() {
  return &nodelist_;
}

// repeated .SkillHsmConfigHSMParameter ParameterList = 3;
inline int SkillHsmConfigHSMTreeData::parameterlist_size() const {
  return parameterlist_.size();
}
inline void SkillHsmConfigHSMTreeData::clear_parameterlist() {
  parameterlist_.Clear();
}
inline const ::SkillHsmConfigHSMParameter& SkillHsmConfigHSMTreeData::parameterlist(int index) const {
  return parameterlist_.Get(index);
}
inline ::SkillHsmConfigHSMParameter* SkillHsmConfigHSMTreeData::mutable_parameterlist(int index) {
  return parameterlist_.Mutable(index);
}
inline ::SkillHsmConfigHSMParameter* SkillHsmConfigHSMTreeData::add_parameterlist() {
  return parameterlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >&
SkillHsmConfigHSMTreeData::parameterlist() const {
  return parameterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SkillHsmConfigHSMParameter >*
SkillHsmConfigHSMTreeData::mutable_parameterlist() {
  return &parameterlist_;
}

// optional string Descript = 4;
inline bool SkillHsmConfigHSMTreeData::has_descript() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SkillHsmConfigHSMTreeData::set_has_descript() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SkillHsmConfigHSMTreeData::clear_has_descript() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SkillHsmConfigHSMTreeData::clear_descript() {
  if (descript_ != &::google::protobuf::internal::kEmptyString) {
    descript_->clear();
  }
  clear_has_descript();
}
inline const ::std::string& SkillHsmConfigHSMTreeData::descript() const {
  return *descript_;
}
inline void SkillHsmConfigHSMTreeData::set_descript(const ::std::string& value) {
  set_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    descript_ = new ::std::string;
  }
  descript_->assign(value);
}
inline void SkillHsmConfigHSMTreeData::set_descript(const char* value) {
  set_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    descript_ = new ::std::string;
  }
  descript_->assign(value);
}
inline void SkillHsmConfigHSMTreeData::set_descript(const char* value, size_t size) {
  set_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    descript_ = new ::std::string;
  }
  descript_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SkillHsmConfigHSMTreeData::mutable_descript() {
  set_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    descript_ = new ::std::string;
  }
  return descript_;
}
inline ::std::string* SkillHsmConfigHSMTreeData::release_descript() {
  clear_has_descript();
  if (descript_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = descript_;
    descript_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SkillHsmConfigHSMTreeData::set_allocated_descript(::std::string* descript) {
  if (descript_ != &::google::protobuf::internal::kEmptyString) {
    delete descript_;
  }
  if (descript) {
    set_has_descript();
    descript_ = descript;
  } else {
    clear_has_descript();
    descript_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SkillHsmConfigTransitionGroup

// optional sint32 Index = 1 [default = -1];
inline bool SkillHsmConfigTransitionGroup::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillHsmConfigTransitionGroup::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillHsmConfigTransitionGroup::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillHsmConfigTransitionGroup::clear_index() {
  index_ = -1;
  clear_has_index();
}
inline ::google::protobuf::int32 SkillHsmConfigTransitionGroup::index() const {
  return index_;
}
inline void SkillHsmConfigTransitionGroup::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// repeated string ParameterList = 2;
inline int SkillHsmConfigTransitionGroup::parameterlist_size() const {
  return parameterlist_.size();
}
inline void SkillHsmConfigTransitionGroup::clear_parameterlist() {
  parameterlist_.Clear();
}
inline const ::std::string& SkillHsmConfigTransitionGroup::parameterlist(int index) const {
  return parameterlist_.Get(index);
}
inline ::std::string* SkillHsmConfigTransitionGroup::mutable_parameterlist(int index) {
  return parameterlist_.Mutable(index);
}
inline void SkillHsmConfigTransitionGroup::set_parameterlist(int index, const ::std::string& value) {
  parameterlist_.Mutable(index)->assign(value);
}
inline void SkillHsmConfigTransitionGroup::set_parameterlist(int index, const char* value) {
  parameterlist_.Mutable(index)->assign(value);
}
inline void SkillHsmConfigTransitionGroup::set_parameterlist(int index, const char* value, size_t size) {
  parameterlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SkillHsmConfigTransitionGroup::add_parameterlist() {
  return parameterlist_.Add();
}
inline void SkillHsmConfigTransitionGroup::add_parameterlist(const ::std::string& value) {
  parameterlist_.Add()->assign(value);
}
inline void SkillHsmConfigTransitionGroup::add_parameterlist(const char* value) {
  parameterlist_.Add()->assign(value);
}
inline void SkillHsmConfigTransitionGroup::add_parameterlist(const char* value, size_t size) {
  parameterlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SkillHsmConfigTransitionGroup::parameterlist() const {
  return parameterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SkillHsmConfigTransitionGroup::mutable_parameterlist() {
  return &parameterlist_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SkillHsmConfigCliRpc_2eproto__INCLUDED
