// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeamSvrRpc.proto

#ifndef PROTOBUF_TeamSvrRpc_2eproto__INCLUDED
#define PROTOBUF_TeamSvrRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TeamSvrRpc_2eproto();
void protobuf_AssignDesc_TeamSvrRpc_2eproto();
void protobuf_ShutdownFile_TeamSvrRpc_2eproto();

class TeamRpcGetTeamAsk;
class TeamRpcGetTeamReply;
class TeamRpcTeamOverAsk;
class TeamRpcTeamOverReply;

// ===================================================================

class TeamRpcGetTeamAsk : public ::google::protobuf::Message {
 public:
  TeamRpcGetTeamAsk();
  virtual ~TeamRpcGetTeamAsk();

  TeamRpcGetTeamAsk(const TeamRpcGetTeamAsk& from);

  inline TeamRpcGetTeamAsk& operator=(const TeamRpcGetTeamAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcGetTeamAsk& default_instance();

  void Swap(TeamRpcGetTeamAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcGetTeamAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcGetTeamAsk& from);
  void MergeFrom(const TeamRpcGetTeamAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 TeamID = 1 [default = -1];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 1;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // optional sint64 UID = 2 [default = -1];
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUIDFieldNumber = 2;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcGetTeamAsk)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 teamid_;
  ::google::protobuf::int64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamSvrRpc_2eproto();
  friend void protobuf_AssignDesc_TeamSvrRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamSvrRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcGetTeamAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcGetTeamReply : public ::google::protobuf::Message {
 public:
  TeamRpcGetTeamReply();
  virtual ~TeamRpcGetTeamReply();

  TeamRpcGetTeamReply(const TeamRpcGetTeamReply& from);

  inline TeamRpcGetTeamReply& operator=(const TeamRpcGetTeamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcGetTeamReply& default_instance();

  void Swap(TeamRpcGetTeamReply* other);

  // implements Message ----------------------------------------------

  TeamRpcGetTeamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcGetTeamReply& from);
  void MergeFrom(const TeamRpcGetTeamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated sint64 UIDS = 2;
  inline int uids_size() const;
  inline void clear_uids();
  static const int kUIDSFieldNumber = 2;
  inline ::google::protobuf::int64 uids(int index) const;
  inline void set_uids(int index, ::google::protobuf::int64 value);
  inline void add_uids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      uids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_uids();

  // optional sint64 TeamID = 3 [default = -1];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 3;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcGetTeamReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > uids_;
  ::google::protobuf::int64 teamid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_TeamSvrRpc_2eproto();
  friend void protobuf_AssignDesc_TeamSvrRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamSvrRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcGetTeamReply* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcTeamOverAsk : public ::google::protobuf::Message {
 public:
  TeamRpcTeamOverAsk();
  virtual ~TeamRpcTeamOverAsk();

  TeamRpcTeamOverAsk(const TeamRpcTeamOverAsk& from);

  inline TeamRpcTeamOverAsk& operator=(const TeamRpcTeamOverAsk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcTeamOverAsk& default_instance();

  void Swap(TeamRpcTeamOverAsk* other);

  // implements Message ----------------------------------------------

  TeamRpcTeamOverAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcTeamOverAsk& from);
  void MergeFrom(const TeamRpcTeamOverAsk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 TeamID = 1 [default = -1];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 1;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcTeamOverAsk)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 teamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_TeamSvrRpc_2eproto();
  friend void protobuf_AssignDesc_TeamSvrRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamSvrRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcTeamOverAsk* default_instance_;
};
// -------------------------------------------------------------------

class TeamRpcTeamOverReply : public ::google::protobuf::Message {
 public:
  TeamRpcTeamOverReply();
  virtual ~TeamRpcTeamOverReply();

  TeamRpcTeamOverReply(const TeamRpcTeamOverReply& from);

  inline TeamRpcTeamOverReply& operator=(const TeamRpcTeamOverReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRpcTeamOverReply& default_instance();

  void Swap(TeamRpcTeamOverReply* other);

  // implements Message ----------------------------------------------

  TeamRpcTeamOverReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRpcTeamOverReply& from);
  void MergeFrom(const TeamRpcTeamOverReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional sint64 TeamID = 2 [default = -1];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 2;
  inline ::google::protobuf::int64 teamid() const;
  inline void set_teamid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TeamRpcTeamOverReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_teamid();
  inline void clear_has_teamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 teamid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_TeamSvrRpc_2eproto();
  friend void protobuf_AssignDesc_TeamSvrRpc_2eproto();
  friend void protobuf_ShutdownFile_TeamSvrRpc_2eproto();

  void InitAsDefaultInstance();
  static TeamRpcTeamOverReply* default_instance_;
};
// ===================================================================


// ===================================================================

// TeamRpcGetTeamAsk

// optional sint64 TeamID = 1 [default = -1];
inline bool TeamRpcGetTeamAsk::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcGetTeamAsk::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcGetTeamAsk::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcGetTeamAsk::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(-1);
  clear_has_teamid();
}
inline ::google::protobuf::int64 TeamRpcGetTeamAsk::teamid() const {
  return teamid_;
}
inline void TeamRpcGetTeamAsk::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional sint64 UID = 2 [default = -1];
inline bool TeamRpcGetTeamAsk::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcGetTeamAsk::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcGetTeamAsk::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcGetTeamAsk::clear_uid() {
  uid_ = GOOGLE_LONGLONG(-1);
  clear_has_uid();
}
inline ::google::protobuf::int64 TeamRpcGetTeamAsk::uid() const {
  return uid_;
}
inline void TeamRpcGetTeamAsk::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcGetTeamReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcGetTeamReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcGetTeamReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcGetTeamReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcGetTeamReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcGetTeamReply::result() const {
  return result_;
}
inline void TeamRpcGetTeamReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated sint64 UIDS = 2;
inline int TeamRpcGetTeamReply::uids_size() const {
  return uids_.size();
}
inline void TeamRpcGetTeamReply::clear_uids() {
  uids_.Clear();
}
inline ::google::protobuf::int64 TeamRpcGetTeamReply::uids(int index) const {
  return uids_.Get(index);
}
inline void TeamRpcGetTeamReply::set_uids(int index, ::google::protobuf::int64 value) {
  uids_.Set(index, value);
}
inline void TeamRpcGetTeamReply::add_uids(::google::protobuf::int64 value) {
  uids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TeamRpcGetTeamReply::uids() const {
  return uids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TeamRpcGetTeamReply::mutable_uids() {
  return &uids_;
}

// optional sint64 TeamID = 3 [default = -1];
inline bool TeamRpcGetTeamReply::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRpcGetTeamReply::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRpcGetTeamReply::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRpcGetTeamReply::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(-1);
  clear_has_teamid();
}
inline ::google::protobuf::int64 TeamRpcGetTeamReply::teamid() const {
  return teamid_;
}
inline void TeamRpcGetTeamReply::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcTeamOverAsk

// optional sint64 TeamID = 1 [default = -1];
inline bool TeamRpcTeamOverAsk::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcTeamOverAsk::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcTeamOverAsk::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcTeamOverAsk::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(-1);
  clear_has_teamid();
}
inline ::google::protobuf::int64 TeamRpcTeamOverAsk::teamid() const {
  return teamid_;
}
inline void TeamRpcTeamOverAsk::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// TeamRpcTeamOverReply

// optional sint32 Result = 1 [default = -9999];
inline bool TeamRpcTeamOverReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRpcTeamOverReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRpcTeamOverReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRpcTeamOverReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TeamRpcTeamOverReply::result() const {
  return result_;
}
inline void TeamRpcTeamOverReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional sint64 TeamID = 2 [default = -1];
inline bool TeamRpcTeamOverReply::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRpcTeamOverReply::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRpcTeamOverReply::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRpcTeamOverReply::clear_teamid() {
  teamid_ = GOOGLE_LONGLONG(-1);
  clear_has_teamid();
}
inline ::google::protobuf::int64 TeamRpcTeamOverReply::teamid() const {
  return teamid_;
}
inline void TeamRpcTeamOverReply::set_teamid(::google::protobuf::int64 value) {
  set_has_teamid();
  teamid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TeamSvrRpc_2eproto__INCLUDED
