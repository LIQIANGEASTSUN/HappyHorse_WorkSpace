// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SaidSvrRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SaidSvrRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SaidRpcCreateLoadRoomNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaidRpcCreateLoadRoomNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaidRpcMessageForwardNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaidRpcMessageForwardNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SaidSvrRpc_2eproto() {
  protobuf_AddDesc_SaidSvrRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SaidSvrRpc.proto");
  GOOGLE_CHECK(file != NULL);
  SaidRpcCreateLoadRoomNotify_descriptor_ = file->message_type(0);
  static const int SaidRpcCreateLoadRoomNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaidRpcCreateLoadRoomNotify, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaidRpcCreateLoadRoomNotify, uid_),
  };
  SaidRpcCreateLoadRoomNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SaidRpcCreateLoadRoomNotify_descriptor_,
      SaidRpcCreateLoadRoomNotify::default_instance_,
      SaidRpcCreateLoadRoomNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaidRpcCreateLoadRoomNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaidRpcCreateLoadRoomNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SaidRpcCreateLoadRoomNotify));
  SaidRpcMessageForwardNotify_descriptor_ = file->message_type(1);
  static const int SaidRpcMessageForwardNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaidRpcMessageForwardNotify, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaidRpcMessageForwardNotify, id_),
  };
  SaidRpcMessageForwardNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SaidRpcMessageForwardNotify_descriptor_,
      SaidRpcMessageForwardNotify::default_instance_,
      SaidRpcMessageForwardNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaidRpcMessageForwardNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaidRpcMessageForwardNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SaidRpcMessageForwardNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SaidSvrRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SaidRpcCreateLoadRoomNotify_descriptor_, &SaidRpcCreateLoadRoomNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SaidRpcMessageForwardNotify_descriptor_, &SaidRpcMessageForwardNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SaidSvrRpc_2eproto() {
  delete SaidRpcCreateLoadRoomNotify::default_instance_;
  delete SaidRpcCreateLoadRoomNotify_reflection_;
  delete SaidRpcMessageForwardNotify::default_instance_;
  delete SaidRpcMessageForwardNotify_reflection_;
}

void protobuf_AddDesc_SaidSvrRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PublicStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020SaidSvrRpc.proto\032\022PublicStruct.proto\":"
    "\n\033SaidRpcCreateLoadRoomNotify\022\016\n\002ID\030\001 \001("
    "\022:\002-1\022\013\n\003Uid\030\002 \003(\022\"<\n\033SaidRpcMessageForw"
    "ardNotify\022\r\n\005Value\030\001 \001(\t\022\016\n\002ID\030\002 \001(\022:\002-1", 160);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SaidSvrRpc.proto", &protobuf_RegisterTypes);
  SaidRpcCreateLoadRoomNotify::default_instance_ = new SaidRpcCreateLoadRoomNotify();
  SaidRpcMessageForwardNotify::default_instance_ = new SaidRpcMessageForwardNotify();
  SaidRpcCreateLoadRoomNotify::default_instance_->InitAsDefaultInstance();
  SaidRpcMessageForwardNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SaidSvrRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SaidSvrRpc_2eproto {
  StaticDescriptorInitializer_SaidSvrRpc_2eproto() {
    protobuf_AddDesc_SaidSvrRpc_2eproto();
  }
} static_descriptor_initializer_SaidSvrRpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SaidRpcCreateLoadRoomNotify::kIDFieldNumber;
const int SaidRpcCreateLoadRoomNotify::kUidFieldNumber;
#endif  // !_MSC_VER

SaidRpcCreateLoadRoomNotify::SaidRpcCreateLoadRoomNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SaidRpcCreateLoadRoomNotify::InitAsDefaultInstance() {
}

SaidRpcCreateLoadRoomNotify::SaidRpcCreateLoadRoomNotify(const SaidRpcCreateLoadRoomNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SaidRpcCreateLoadRoomNotify::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(-1);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaidRpcCreateLoadRoomNotify::~SaidRpcCreateLoadRoomNotify() {
  SharedDtor();
}

void SaidRpcCreateLoadRoomNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SaidRpcCreateLoadRoomNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaidRpcCreateLoadRoomNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaidRpcCreateLoadRoomNotify_descriptor_;
}

const SaidRpcCreateLoadRoomNotify& SaidRpcCreateLoadRoomNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SaidSvrRpc_2eproto();
  return *default_instance_;
}

SaidRpcCreateLoadRoomNotify* SaidRpcCreateLoadRoomNotify::default_instance_ = NULL;

SaidRpcCreateLoadRoomNotify* SaidRpcCreateLoadRoomNotify::New() const {
  return new SaidRpcCreateLoadRoomNotify;
}

void SaidRpcCreateLoadRoomNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(-1);
  }
  uid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SaidRpcCreateLoadRoomNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 ID = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Uid;
        break;
      }

      // repeated sint64 Uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 16, input, this->mutable_uid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_uid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Uid;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SaidRpcCreateLoadRoomNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional sint64 ID = 1 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // repeated sint64 Uid = 2;
  for (int i = 0; i < this->uid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      2, this->uid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SaidRpcCreateLoadRoomNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional sint64 ID = 1 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->id(), target);
  }

  // repeated sint64 Uid = 2;
  for (int i = 0; i < this->uid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64ToArray(2, this->uid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SaidRpcCreateLoadRoomNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint64 ID = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->id());
    }

  }
  // repeated sint64 Uid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->uid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->uid(i));
    }
    total_size += 1 * this->uid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaidRpcCreateLoadRoomNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SaidRpcCreateLoadRoomNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SaidRpcCreateLoadRoomNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SaidRpcCreateLoadRoomNotify::MergeFrom(const SaidRpcCreateLoadRoomNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  uid_.MergeFrom(from.uid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SaidRpcCreateLoadRoomNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaidRpcCreateLoadRoomNotify::CopyFrom(const SaidRpcCreateLoadRoomNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaidRpcCreateLoadRoomNotify::IsInitialized() const {

  return true;
}

void SaidRpcCreateLoadRoomNotify::Swap(SaidRpcCreateLoadRoomNotify* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    uid_.Swap(&other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SaidRpcCreateLoadRoomNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaidRpcCreateLoadRoomNotify_descriptor_;
  metadata.reflection = SaidRpcCreateLoadRoomNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SaidRpcMessageForwardNotify::kValueFieldNumber;
const int SaidRpcMessageForwardNotify::kIDFieldNumber;
#endif  // !_MSC_VER

SaidRpcMessageForwardNotify::SaidRpcMessageForwardNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SaidRpcMessageForwardNotify::InitAsDefaultInstance() {
}

SaidRpcMessageForwardNotify::SaidRpcMessageForwardNotify(const SaidRpcMessageForwardNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SaidRpcMessageForwardNotify::SharedCtor() {
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  id_ = GOOGLE_LONGLONG(-1);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaidRpcMessageForwardNotify::~SaidRpcMessageForwardNotify() {
  SharedDtor();
}

void SaidRpcMessageForwardNotify::SharedDtor() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void SaidRpcMessageForwardNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaidRpcMessageForwardNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaidRpcMessageForwardNotify_descriptor_;
}

const SaidRpcMessageForwardNotify& SaidRpcMessageForwardNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SaidSvrRpc_2eproto();
  return *default_instance_;
}

SaidRpcMessageForwardNotify* SaidRpcMessageForwardNotify::default_instance_ = NULL;

SaidRpcMessageForwardNotify* SaidRpcMessageForwardNotify::New() const {
  return new SaidRpcMessageForwardNotify;
}

void SaidRpcMessageForwardNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
    id_ = GOOGLE_LONGLONG(-1);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SaidRpcMessageForwardNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ID;
        break;
      }

      // optional sint64 ID = 2 [default = -1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SaidRpcMessageForwardNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string Value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->value(), output);
  }

  // optional sint64 ID = 2 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SaidRpcMessageForwardNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string Value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // optional sint64 ID = 2 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SaidRpcMessageForwardNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional sint64 ID = 2 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaidRpcMessageForwardNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SaidRpcMessageForwardNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SaidRpcMessageForwardNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SaidRpcMessageForwardNotify::MergeFrom(const SaidRpcMessageForwardNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SaidRpcMessageForwardNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaidRpcMessageForwardNotify::CopyFrom(const SaidRpcMessageForwardNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaidRpcMessageForwardNotify::IsInitialized() const {

  return true;
}

void SaidRpcMessageForwardNotify::Swap(SaidRpcMessageForwardNotify* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SaidRpcMessageForwardNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaidRpcMessageForwardNotify_descriptor_;
  metadata.reflection = SaidRpcMessageForwardNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
