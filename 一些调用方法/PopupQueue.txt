

-- 进入场景后一系列弹窗的队列，如：活动、奖励、提醒等等

-- PopupQueue.lua

-- 在 popupForceQueuePriority 中添加需要控制弹窗的脚本名如 ABC

-- 然后在目录 Assets\HomeLand\LuaScript\System\Core\PopupJob 创建一个 Job_XBC.lua
-- PopupQueue 执行的时候会自动拼接 Job_

-- Job_XBC.lua 如下

--------------------Job_CheckLottery
local Job_XBC = {

}

function Job_XBC:Init(priority)
    self.name = priority
end

-- PopupQueue调用Job_XBC:CheckPop，判断弹窗能否显示，CheckPop 函数名不能改
function Job_XBC:CheckPop()
    local needShow = 判断这个弹窗是否需要显示的逻辑
    return needShow
end

-- PopupQueue调用Job_XBC:Do，打开弹窗界面，Do 函数名不能改
function Job_CheckLottery:Do(finishCallback)
    local valid = 在这里再判断是否可以有效的显示弹窗
    if valid then
        -- 添加界面关闭的回调
        local pcb = PanelCallbacks:Create(function()
		    -- 界面关闭后必须调用 finishCallback 才会执行后续的队列
            Runtime.InvokeCbk(finishCallback)
        end)

        local arguments = {activityId = ActivityServices.LotteryManager:GetActivityId()}
		-- 调用打开界面
        PanelManager.showPanel(GlobalPanelEnum.ActivityLotteryPanel, arguments, pcb)
    else
	    -- 如果不能打开弹窗界面，需要调用 finishCallback 才会执行后续的队列
        Runtime.InvokeCbk(finishCallback)
    end
end

return Job_CheckLottery