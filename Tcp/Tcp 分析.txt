

网络这块我觉得咱们的开个会说一下了，按照现在的套路走下去，可能是个收不住的大坑

咱项目中目前的用法 xxx.proto 生成的  xxx_pb.lua 在项目中是正常使用的
序列化    SerializeToString
反序列化  ParseFromString
都是没问题的

目前因为服务器的那一套 xxx.proto 规则，不适用我们项目中之前 http 使用的那一套 xxx.proto 的规则

然后林老板找了一套在 lua 中直接使用 *.proto 的开源库
https://github.com/starwing/lua-protobuf/blob/master/README.zh.md

经龙老板导入前端工程确实是可以这么用，因为昨天测试脚本写的是 绝对路径 E:/xxx/xxx/xxx.proto
但是关于加载的规则还不知道怎么弄
并且这个库跟现在项目中 protobuf 模块，是有冲突的，

昨天龙老板测试的时候是单独弄了一个启动，已经不能走咱们项目的登录流程了

我大概看了一下上边这个库的功能和理论，关于这个库的编译是要有一定的 C编译经验的，这一块可能只有朱老板擅长
如果需要修改一些逻辑然后再编译的话，我觉得这个是个坑
这个库有自己的内存管理，这个可能也需要花时间研究

并且这会浪费很多时间


我的建议是，我们之前的 xxx.proto 和 http 那一套完全保留，而 Tcp 这一块，我们是扩展新加，
http 那一套不能适用是因为咱有一套 Generate Protocol，这个直接就生成了，消息发送和接收

而Tcp 的使用流程上稍微有些区别，如果需要可以将 Tcp 这块的 xxx.proto 写一个 Generate Protocol

我们尽量要保留 Http 的前提下，新增 Tcp ，而不是加了 Tcp， Http 那一套丢弃，或许后边加 Udp 也不一定
所以它们一定是要共存的



