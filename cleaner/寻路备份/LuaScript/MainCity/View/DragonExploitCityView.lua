
local DragonExploitCityView = {}

---@param rootView MainCity
function DragonExploitCityView:Create(rootView)
    self.rootView = rootView
    self.layout = rootView.layout
    return self
end

function DragonExploitCityView:Init()
    local QuitButton = require "UI.Components.DragonExploit.DragonExploitQuitButton"
    local quitButton = QuitButton:Create()
    quitButton:SetParent(self.layout.transTC)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.ExploitQuitButton, quitButton)

    local ScoreItem = require "UI.Components.DragonExploit.DragonExploitScoreItem"
    local scoreItem = ScoreItem:Create()
    scoreItem:SetParent(self.layout.transTC)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.ExploitScoreItem, scoreItem)

    local ProgressItem = require "UI.Components.DragonExploit.DragonExploitProgressItem"
    local progressItem = ProgressItem:Create()
    progressItem:SetParent(self.layout.transTC)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.ExploitProgress, progressItem)

    local DragonsItem = require "UI.Components.DragonExploit.DragonExploitDragons"
    local dragonsItem = DragonsItem:Create()
    dragonsItem:SetParent(self.layout.transBC)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.ExploitDragons, dragonsItem)
    local dragonList = ActivityServices.DragonExploit:GetChosenDragons()
    dragonsItem:SetData(dragonList)
    --buff图标
    local BuffItem = require "UI.Components.DragonExploit.DragonExploitBuff"
    local buffItem_Drop = BuffItem:Create()
    buffItem_Drop:SetParent(self.layout.transR)
    buffItem_Drop:SetData(ItemId.Buff2Drop)
    buffItem_Drop.gameObject.transform.anchoredPosition = Vector2(0,-58)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.ExploitBuffs_2Drop, buffItem_Drop)

    local buffItem_Collect = BuffItem:Create()
    buffItem_Collect:SetParent(self.layout.transR)
    buffItem_Collect:SetData(ItemId.Buff2Collect)
    buffItem_Collect.gameObject.transform.anchoredPosition = Vector2(0,-186)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.ExploitBuffs_2Collect, buffItem_Collect)

    local BagButton = require "UI.Components.BagButton"
    local bagBtn = BagButton:Create()
    bagBtn:SetParent(self.layout.transBR)
    bagBtn.gameObject:SetActive(false)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.BagBtn, bagBtn)

    local DiamondItem = require "UI.Components.DiamondItem"
    local CoinItem = require "UI.Components.CoinItem"

    local coinItem = CoinItem:Create()
    coinItem:SetParent(self.layout:Node())
    coinItem.gameObject:SetActive(false)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.CoinIcon, coinItem)

    local diamondItem = DiamondItem:Create()
    diamondItem:SetParent(self.layout:Node(), false)
    diamondItem.gameObject:SetActive(false)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.DiamondIcon, diamondItem)

    local HeartItem = require "UI.Components.HeartItem"
    local heartItem = HeartItem:Create()
    heartItem:SetParent(self.layout:Node(), false)
    heartItem.gameObject:SetActive(false)
    self.rootView:AddWidget(CONST.MAINUI.ICONS.EnergyIcon, heartItem)
end

function DragonExploitCityView:BeforeUnload()
    self.rootView:GetWidget(CONST.MAINUI.ICONS.ExploitProgress):BeforeUnload()
    self.rootView:GetWidget(CONST.MAINUI.ICONS.ExploitDragons):BeforeUnload()
    self.rootView:GetWidget(CONST.MAINUI.ICONS.ExploitBuffs_2Drop):BeforeUnload()
    self.rootView:GetWidget(CONST.MAINUI.ICONS.ExploitBuffs_2Collect):BeforeUnload()
end

function DragonExploitCityView:Destroy()
end

return DragonExploitCityView
