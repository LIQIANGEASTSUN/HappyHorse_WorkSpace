---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/4/16 18:24
---
--- 区域数据
---     解锁状态
---
--- 区域功能:
---     解锁(剧情解锁/开放)
---     修复(随着修复等级的提升, 有不同的修复事件)
---
local kRegionType = {
    major = 0, --主区域(剧情相关)
    minor = 1 --可售卖区域
}
local GLOBAL_OFFSET = Vector3(-0.5, 0, -0.5)
---@class Region @区域信息
local Region = class(nil, "Region")

---@class kRegionMeta
---@field linked boolean

---@param meta kRegionMeta @原始数据
function Region:ctor(meta, rects)
    ---@type kRegionMeta @原始数据
    self.meta = meta
    ---区域编号
    self.id = meta.id
    ---@type Bounds @区域包围框, 根据自身包含区块自动调整大小
    self.bounds = include("MainCity.Data.Bounds")

    ---@type Rect[]
    self.rectDatas = rects
    for _, rect in pairs(rects) do
        local min = {x = rect.xMin, y = rect.zMin}
        local max = {x = rect.xMin + rect.xSize - 1, y = rect.zMin + rect.zSize - 1}
        self.bounds:InclusivePoint(min)
        self.bounds:InclusivePoint(max)
    end
end

function Region:Init()
    self.initialized = true
    if self.meta.type == kRegionType.major then
        self:SetLinked(true)
    end

    local map = App.scene.mapManager --@DEL
    local xs = self.bounds.xMax - self.bounds.xMin + 1 --@DEL
    local zs = self.bounds.zMax - self.bounds.zMin + 1 --@DEL
    ---@private
    self.size = Vector3(xs, 0, zs) --@DEL
    local min = map:ToWorld(self.bounds.xMin, self.bounds.zMin) --@DEL
    local max = map:ToWorld(self.bounds.xMax, self.bounds.zMax) --@DEL
    ---@private
    self.center = (max + min)/ 2 + GLOBAL_OFFSET --@DEL
end

function Region:GetId()
    return self.id
end

function Region:OnRegionLinked()
    self:SetLinked(true)
    local agents = self:FindAllAgents()
    for _, agent in pairs(agents) do
        agent:OnRegionLinked()
    end
    local info = {sn = self.id}
    AppServices.Net:Send(MsgMap.CSLinkIsland, info)
    AppServices.User:SetLinkIsland(self.id)

    MessageDispatcher:SendMessage(MessageType.IslandLinkHomeland, self.id)
end

---@return boolean, boolean @返回两个值: 区域是否包含该点, 该点是否已开启
function Region:ContainsGrid(x, z)
    if not self.bounds:ContainsGrid(x, z) then
        return false
    end

    if self.rectDatas then
        ---@param rect Rect
        for k, rect in pairs(self.rectDatas) do
            if rect:ContainsGrid(x, z) then
                return true, self.linked
            end
        end
    end
    return false
end

function Region:IsLinked()
    return self.linked
end
function Region:SetLinked(linked)
    self.linked = linked
end

function Region:FindAllAgents()
    local map = App.scene.mapManager
    local agents = {}
    for _, rect in ipairs(self.rectDatas) do
        local xMin = rect.xMin
        local zMin = rect.zMin
        for x = 0, rect.xSize - 1, 1 do
            for z = 0, rect.zSize - 1, 1 do
                local xnew = x + xMin
                local znew = z + zMin
                local objs = map:GetObjects(xnew, znew)
                for _, obj in pairs(objs) do
                    if obj and obj.alive then
                        agents[obj:GetId()] = obj
                    end
                end
            end
        end
    end
    return agents
end

function Region:DrawGizmos() --@DEL
    if CS.GizmosUtil.showRect and self.center and self.size then --@DEL
        local Gizmos = CS.UnityEngine.Gizmos
        local color --@DEL
        if self.linked then --@DEL
            color = Color.cyan --@DEL
        else --@DEL
            color = Color.red --@DEL
        end --@DEL

        Gizmos.color = color --@DEL
        Gizmos.DrawWireCube(self.center, self.size) --@DEL
    end --@DEL
end --@DEL

function Region:OnDestroy()
    self.meta = nil
    self.id = nil
    self.bounds = nil
    self.rectDatas = nil
    self.size = nil --@DEL
    self.center = nil --@DEL
end

return Region
