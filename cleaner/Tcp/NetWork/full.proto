syntax = "proto2";
option optimize_for = CODE_SIZE;

// -----------------------------------------
// 数据集合体
// -----------------------------------------

// 2D坐标信息
message DVector2 {
	required double x 					= 1; // 横坐标
	required double y 					= 2; // 纵坐标
}

// 3D坐标信息
message DVector3 {
	required double x 					= 1; // X坐标
	required double y 					= 2; // Y坐标
	required double z 					= 3; // Z坐标
}

// kv
message DKV {
	required int32 k 					= 1;
	required int32 v					= 2;
}


//角色信息
message DCharacter {
    required int64 id           = 1;  //角色ID
    optional string name        = 2;  //昵称
    optional int32 profession   = 3;  //职业
    optional int32 level        = 4;  //等级
   
}


//属性信息
message DAttrKV {
	required int32 attrKey 						= 1; //属性Key
	required float attrValue 					= 2; //属性Value
}

//int32-int32型pair对
message DPairII {
	required int32 key 						= 1; //Key
	required int32 value 					= 2; //Value
}

//奖励属性信息
message DProduce {
	required int32 sn 						= 1; //属性Key
}
// item信息
message DItem {
    required int32 sn       = 1;  // SN
    required int32 num      = 2;  // 数量
    optional int64 itemId   = 3;  // 物品Id
}
enum QuestState //枚举任務状态
{
	UNACCEPT = 0; //proto3版本中，首成员必须为0，成员不应有相同的值
	UNDERWAY = 1;
	FINISHED = 2;
	SUBMITED = 3;
	HANG = 4;
}
enum DungeonState //枚举关卡状态
{
	VISIBLE   = 0;
	COMPLETED = 1;
	UNLOCK    = 2;
}
// 任务结构体
message DQuest {
required int32 sn = 1; // 任务ID
required QuestState state	= 2; // 任务状态
	optional int32 current_count	= 3; // 当前计数值
	//optional int32 loopSn	= 4; // 环任务的sn
	//optional int32 loopNum	= 5; // 环任务进行到第几环
	//optional int32 loopRewardNum	= 6; // 环任务奖励内容
	//optional int32 childSn	= 7; // 子母任务sn
	repeated DProduce rewards	= 8; // 任务的奖励列表
	optional int64 acceptTime	= 9; // 接受任务时间
}
// 关卡结构体
message DDungeonNode {
	required int32 sn 				= 1; // 关卡ID
	required DungeonState state		= 2; // 关卡状态
	optional int64 acceptTime		= 3; // 关卡创建时间
	required int32 challenge_count	= 4; // 挑战次数
	required int32 challenge_rating	= 5; // 关卡评级
	optional int32 flag				= 6; // 完成关卡星级条件判定
}
// 章节结构体
message DAreaNode {
	required int32 currentAreaSn 						= 1; // 大地图sn
	required int32 currentDungeonSn 					= 2; // 小地图sn
}

// -----------------------------------------
// 账号验证
// -----------------------------------------

// 客户端请求：登录请求
message CSLogin {
	required string channelId 					= 1; // 渠道id
	required string userIdentity 				= 2; // 用户标识，SDKUserId或用户名
	required string token						= 3; // token
	required string deviceId					= 4; // 设备id
	required string version 					= 5; // 客户端版本号
}

// 服务器返回：登录请求返回结果
message SCLoginResult {
	required int32 resultCode					= 1; // 0=成功
}

// 客户端请求：生成支付参数
message CSGetPayParam {
	required string productId 					= 1; // 商品id
}

// 服务器返回：生成支付参数
message SCGetPayParam {
	required int32 resultCode 					= 1; // 1--成功
	required string sign 						= 2; // 支付参数
}

// 客户端请求：断线重连
message CSAccountReconnect {
	required string userIdentity 					= 1; // 平台账号
	required string token 							= 2; // 连接关键字
	required int32 frame 						= 3; // 战斗当前帧
}

// 服务器返回：断线重连返回结果
message SCAccountReconnectResult {
	optional int32 resultCode 					= 1; // 错误编号
}

// 客户端请求：登出
message CSLogout {
}


// 服务器推送：登陆排队中
message SCAccountLoginQueue {
	optional int32 num 							= 1; // 排队人数
	optional int32 sec 							= 2; // 排队时间
}

// 客户端请求：输入激活码
message CSKeyActivate {
	optional string keyActivate 				= 1; // 激活码
}

// 服务器返回：激活码验证返回
message SCKeyActivate {
	optional bool resultCode					= 1; // 激活码是否正确
}

// 客户端请求：发送本地定位
message CSUpdateLocalation {
	required string province				= 1; // 省份
	required string city					= 2; // 城市
	required int32 cityCode					= 3; // 城市码
	required int32 longitude				= 4; // 经度
	required int32 latitude					= 5; // 纬度 
}

// 服务器返回：发送本地定位
message SCUpdateLocalation {
	required string province				= 1; // 省份
	required string city					= 2; // 城市
	required int32 cityCode					= 3; // 城市码
	required int32 longitude				= 4; // 经度
	required int32 latitude					= 5; // 纬度 
}


// -----------------------------------------
// human
// -----------------------------------------

// 玩家信息
message SCHumanInfo {
	required int64 id 					= 1; // 玩家id
	optional string channelId			= 2 [default = "null"]; // 渠道id
	optional string name 				= 3 [default = "null"]; // 姓名
	required int32 level 				= 4 [default = 1]; // 等级
}
message SCHumanLevelUp {
	required int64 id 					= 1; // 玩家id
	required int32 level 				= 2; // 等级

}
























// -----------------------------------------
// human
// -----------------------------------------

// 进度信息
message DTaskItem {
	required int32 key	 						= 1; //key
	required int64 value	 					= 2; //value
}

//任务请求
message CSTask {
	required int32 type = 1;             //任务类型 0:所有 1:主线 2:支线 3:日常 4:周常
}
message SCTask {
	required int32 type = 1;                   //任务类型 0:所有 1:主线 2:支线 3:日常 4:周常
	repeated DTaskItem mainItems = 2;          //主线任务进度列表 任务id->进度值
	repeated DTaskItem branchItems = 3;        //支线任务进度列表 任务id->进度值
	repeated DTaskItem dailyItems = 4;         //日常任务进度列表 任务id->进度值
	repeated DTaskItem weekItems = 5;          //周常任务进度列表 任务id->进度值
	repeated int32 chapterReward = 6;          //已领取的章节奖励 章节id
	repeated int32 dailyReward = 7;            //已领取的每日任务奖励 任务id
	repeated int32 weekReward = 8;            //已领取的每周任务奖励 任务id
	repeated int32 branchReward = 9;           //已领取的支线任务奖励 任务id
	repeated int32 dailyBoxReward = 10;        //已领取的每日任务宝箱奖励 宝箱id
	repeated int32 weekBoxReward = 11;         //已领取的每周任务宝箱奖励 宝箱id
	required int32 dailyPoint = 12;			   //每日积分
	required int32 weekPoint = 13;			   //每周积分
}

//领取周,日常任务奖励
message CSTaskReward {
	required int32 type = 1;			//奖励类型 1:日常奖励 2: 日常宝箱奖励 3:周常奖励 4:周常宝箱奖励 5:支线奖励
	required int32 id = 2;			    //传任务的id
}
message SCTaskReward {
	required int32 type = 1;			//奖励类型
	required int32 id = 2;			    //传任务的id
	required int32 point = 3;			//积分
	repeated DTaskItem branchItems = 4; //解锁的支线任务进度列表 任务id->进度值
}

//主线任务完成
message CSMainTaskComplete {
}
message SCMainTaskComplete {
	repeated DTaskItem mainItems = 2;          //新主线任务进度列表 任务id->进度值
	repeated DTaskItem branchItems = 3;        //支线任务进度列表 任务id->进度值
	//required int32 taskId = 1;           //新任务id
}


























// -----------------------------------------
// 玩家登录
//

// -----------------------------------------
// 结构体
//
message DBirthPoint {
	required int32 evnType 		= 1;		// 环境类型
	required int32 birthPoint 	= 2;		// 出生点评分

}


// -----------------------------------------
//查询玩家角色列表
message CSQueryCharacters {
}

//返回玩家角色列表
message SCQueryCharactersResult {
	repeated DCharacter characters = 1;		//角色列表集合 支持多角色
}

//创建角色
message CSCharacterCreate {
	required int32 profession = 1;			//职业
	optional string name = 2;			//名字


}

//创建角色返回
message SCCharacterCreateResult {
	required int32 resultCode = 1;			//执行结果编码
	optional string resultReason = 3;		//执行结果描述
	optional int64 humanId = 2;			//新创建角色ID
}

//删除角色
message CSCharacterDelete {
	required int64 id = 1;					//角色ID
}

//删除角色结果
message SCCharacterDeleteResult {
	required int32 resultCode = 1;			//执行结果编码
	optional int64 id = 2;
	optional int64 survive_time = 3; // 删除成功后,该角色的剩余删除时间,-1时直接从列表中移除
}

//角色登录
message CSCharacterLogin {
	required int64 humanId = 1;				//角色ID
}

//角色登录结果
message SCCharacterLoginResult {
	required int32 resultCode = 1;			//执行结果编码
}

// 取消删除
message CSCharacterCancelDelete {
	required int64 id 			= 1; // 角色id
}

// 取消删除返回
message SCCharacterCancelDeleteResult {
	required int32 resultCode 	= 1; // 错误码0=成功
	optional int64 id 			= 2; // 角色id
}



// -----------------------------------------
// 通用全局
// -----------------------------------------


// 服务器推送：服务器相关配置
message SCServerConfig {
	required int64 timeNow 					= 1; //当前服务器时间
}

// 客户端请求：ping
message CSPing {
}

// 服务器返回：ping
message SCPing {
}

// 客户端请求服务器时间
message CSServerTime {
}

// 服务器返回：ping
message SCServerTime {
	optional int64 time = 1;			//服务器时间戳
}

// 服务器推送：剔除玩家
message SCHumanKick {
	required int32 resultCode 				= 1; // 被踢原因
}

// 服务器推送：错误提示
message SCHint {
	required int32 strId 					= 1; // 提示表的id
	repeated string param 					= 2; // 参数的值
}

// 客户端请求：分享到社交媒体成功
message CSShare {
	required int32 platform 					= 1; // 平台id, 1: 微信好友 2: 微信朋友圈 3: qq 4: 微博
}

// 服务器推送：错误提示
message SCText {
	required string text 					= 1; // 参数的值
}



// -----------------------------------------
// item物品相关
// -----------------------------------------


// 上线发所有物品
message SCItemAll {
	repeated DItem items = 1;
}
// 数量改变  返回的是最终值 不是变化值
message SCItemChanged {
	repeated DItem add = 1; // 数量增加 
	repeated DItem del = 2; // 数量减少
}

// -----------------------------------------
// 章节关卡
// -----------------------------------------

// 关卡类型
enum EDunType {
	normal = 1;		// ：普通 
	challenge = 2;	// ：挑战 
	invisible = 3;	// ：隐藏	
}
message DDungeon {
	required int32 dungSn = 1; 		// 关卡表Sn
	required bool  passNormal = 2; 	// 普通通关
	required bool  passAll = 3; 	// 完成全部条件
	required bool  passChall = 4; 	// 完成挑战
}

message DChapter {
	repeated int32 takenReward = 1; //本章节已领的奖励 ChapterReward表
	required int32 chapterSn = 2;	//章节Sn
	repeated DDungeon dung = 3;		//本章进行过的关卡
}


// 上线发关卡信息
message SCChapterAll {
	required int32 tili = 1; 		// 体力
	repeated DChapter chapter = 2;	// 章节信息
	required bool unlockChall = 3; // 是否已解锁挑战模式
}

// 战斗之后 更新关卡信息
message SCChapter {
	repeated DDungeon dung = 1; // 如果失败长度为0；如果打之前的关卡和非普通关卡，长度为1，只包含本身关卡；如果打最新的关卡且成功，长度为2，最后一个为下一能打的普通新关卡
}

// 领奖
message CSGetReward {
	required int32 chapterSn = 1; // 章节表Sn
	required int32 rewardSn = 2; // 章节奖励表Sn
}
// 领奖成功时返回
message SCGetReward {
	required int32 chapterSn = 1; // 章节表Sn
	required int32 rewardSn = 2; // 章节奖励表Sn
}
// 进入关卡
message CSEnterDungeon {
	required int32 groupId	= 1; // 选择上场的编队
	required int32 dungSn	= 2; // 进入的关卡sn
}
// 解锁挑战关卡功能
message SCUnlockChallengeFeature {
}

// 更新体力
message SCUpdateTili {
	required int32 tili = 1;
	optional int64 time = 2; // 当前体力对应时间
}
// 关卡通关结果
message SCDungeonResult {
	required bool isSucc = 1; // 是否成功
	repeated DItem reward = 2; // 经验 也是货币型item 也在这里
	repeated int32 condition = 3; // 完成的目标
	optional int32 hitHero = 4; //最后一击 
	repeated DItem firstReward = 5; // 首次通过奖励
} 

// 请求某一关卡详细信息 比如杀怪数量 具体内容由目标类型决定
message CSDungeonDetail {
	required int32 dungSn = 2; // 关卡sn
} 


// 返回详细信息 具体内容待定
message SCDungeonDetail {
	required int32 dungSn = 2; // 关卡sn
}

message CSPlotFinish {
	required int32 plotSn = 1; // 完成剧情的SN
}  

message SCPlotFinish {
	required int32 plotSn = 1; // 剧情的SN
}  

message SCPlotFinishAll {
	repeated int32 plotSn = 1; // 剧情的SN列表
}  






//客户端请求：快手语音聊天室game_im_token
message CSGetKwaiVoiceToken {
}

//服务器推送：快手语音聊天室token
message SCGetKwaiVoiceToken {
	required int32 type 				= 1;//请求类型 0：返回gameImToken 1：返回callId
	optional string gameImToken 		= 2;
	optional string callId 				= 3;
}
//此pb为kafka消息，仅用于服务器
//登陆日志
message LogLogin {
	required int64 humanId 				= 1;//humanid
	required string date 				= 2;//登录时间
	
}

// 服务器日志打点格式
message ActionLog {
    required string app_id = 1; // 游戏的appid
    required string app_version = 2; // app version
    required string channel = 3; // 渠道
    required string game_user_id = 4; // 融合sdk的userid
    required string role_id = 5; // 游戏的角色id
    required string role_name = 6; // 游戏的角色名
    required sint32 role_level = 7; // 游戏角色等级
    required sint32 vip_level = 8; // vip等级
    required sint64 timestamp = 9; // 打点的时间
    required string action_name = 10; // 日志的动作名称
    required string device_id = 11; // device Id
    required string data = 12; // 打点的数据，json格式
}
// -----------------------------------------
// srpg战场外英雄相关
// -----------------------------------------





message DHeroSnGroup {
	repeated int32 heroList	= 1; //英雄sn 按编队序放
}

message DHeroInfo {
	required int32 sn		= 1; // 配置sn
	required int32 lv		= 2; // 等级
	required int32 exp		= 3; // 当前经验
	required int32 lvBreak  = 4; // confLvBreak表中sn
	required int32 pinzhiSn	= 5; // 品阶sn HeroPinJie.xlsx
	required int32 fScore	= 6; // 战斗力
	repeated DAttrKV attr	= 7; // 属性
	repeated DPairII skills = 8; // 技能--等级
	repeated int32 groupId	= 9; // 编队id 如果无编队数组长度是0
}


// 打开ui 获取战斗英雄列表
message CSOpenCombatHeroList {
}
message SCOpenCombatHeroList {
	repeated DHeroInfo heroList	= 1; //英雄
}



// 推荐英雄编队
message CSGetRecoGroup {
}
// 返回
message SCGetRecoGroup {
	repeated int32 heroList = 1;  //英雄编队
}



//设置上阵英雄编队
message CSSetHero {
	repeated DHeroSnGroup heroSnGroup	= 1; // 英雄编队
}

//获取英雄图鉴 
message CSHeroBooks {
}
// 返回英雄图鉴
message SCHeroBooks {
	repeated DHeroInfo heros	= 1; //英雄
}

// 英雄升级
message CSHeroLevelup {
	required int32 heroSn = 1;
	repeated DItem item = 2; // 经验道具
}
// 返回英雄升级
message SCHeroLevelup {
	required DHeroInfo hero = 1; // 升级结果
}

// 英雄突破
message CSHeroBreakthrough {
	required int32 heroSn = 1;

}
// 返回英雄突破
message SCHeroBreakthrough {
	required int32 breakSn = 1; // 突破后 下一次需要突破的配置sn  
	required int32 heroSn = 2;
}

// 英雄升品
message CSHeroUpPinzhi {
	required int32 heroSn = 1;

}
// 返回英雄升品
message SCHeroUpPinzhi {
	required DHeroInfo hero = 1; 
}


// -----------------------------------------
// srpg战斗相关
// -----------------------------------------


// 战斗对象信息
message DCombatObjectInfo {
	required int64 id 							= 1; //id
	required int32 x	 						= 2; //地格x
	required int32 y	 						= 3; //地格y
	required int32 sn							= 4; //配置sn
	required int32 camp							= 5;
	repeated DAttrKV attrs						= 6;

}
// 移动信息
message DMove {
	required int64 id 							= 1; //id
	required int32 x	 						= 2; //地格x
	required int32 y	 						= 3; //地格y
}
// 地格信息
message DGridInfo {
	required int32 x	 						= 1; //x
	required int32 y	 						= 2; //y
	required int32 type							= 3; //类型  0：灰色 1：绿色 2：红色 3：紫色 4：黄色
	repeated DTargetGroup targetGroup			= 4; //可攻击的目标组
	repeated DTargetGroup helpTargetGroup		= 5; //连携技被动移动的英雄的目标组

}
// 目标组
message DTargetGroup {
	required int64 groupId 						= 1; //目标组id
	repeated int64 targets						= 2; //可攻击的目标
}
// 技能造成的效果
message DSkillResult {
	required int64 id 							= 1; //id
	required int32 type		 					= 2; //类型 1：血量变化
	optional float hpChange	 					= 3; //血量变化值
	optional float hpCur	 					= 4; //当前血量
}

//进入战斗房间上行
message CSEnterRoom {
	required int32 roomSn 							= 1; 
	
}
//进入战斗房间下行
message SCEnterRoom {
	required int32 errorCode 						= 1; 
	required int64 roomId 							= 2; 
	required int32 roomSn 							= 3; 
	
}

//客户端进入战斗房间上行结束
message CSEnterRoomEnd {
	required int32 roomSn 							= 1; 
	
}

//英雄信息下行
message SCCombaterInfo {
	repeated DCombatObjectInfo heros	= 1; //英雄信息初始化
	repeated DCombatObjectInfo monster	= 2; //所有的怪
}


//英雄 普通移动 上行
message CSCombaterMove {
	repeated DMove heroMove 							= 1; 
	 
}
//移动 广播
message SCCombaterMove {
	repeated DMove combatMove 							= 1; 	
}


//战斗开始
message CSCombatStart {
	required int64 objId 		= 1; // 要作战怪物中 最近的一个怪的id
	repeated DMove heroMove 	= 2; // 所有英雄的位置

}

//返回战斗开始
message SCCombatStart {
	repeated DCombatObjectInfo combatObjectInfo				= 1; //战斗对象信息
}

//英雄 移动地格 信息下行
message SCCombaterMoveGrid {
	required int64 id 							= 1; //英雄的id
	repeated DGridInfo gridInfod				= 2; //移动地格信息
}
//英雄 战斗移动 上行
message CSCombaterSkillMove {
	required DMove skillMove 							= 1; 
	repeated int64 groupId								= 2;//选择的目标组id
}

//战斗移动 广播
message SCCombatObjectMove {
	required int64 id 							= 1; //id
	required int32 x	 						= 2; //地格x
	required int32 y 							= 3; //地格y
	required int32 type		 					= 4; //类型 1：普通移动 2：绿色防御移动 3：红色普通攻击移动 4：紫色释放专属技能 5：连携技
	optional int32 skillSn	 					= 5; //技能sn
	repeated int64 targetId 					= 6; //目标id
	

}
//技能结果展示
message SCSkillResult {
	required int64 casterId 					= 1; //释放者id
	required int32 skillSn	 					= 2; //技能sn
	repeated DSkillResult skillResult	 		= 3; //结果展示
	required bool isGridSkill					= 4; //是否是格子技能
	required int32 gridType		 				= 5; //类型 1：普通移动 2：绿色防御移动 3：红色普通攻击移动 4：紫色释放专属技能 5：连携技

}
//战斗对象展示完成
message CSCombatShowEnd {
	required int64 id 							= 1; //id
}

//释放技能上行
message CSCastSkill {
	required int64 id 							= 1; //id
	required int32 skillSn	 					= 2; //技能sn
}

//释放技能广播
message SCCastSkill {
	required int64 id 							= 1; //id
	required int32 skillSn	 					= 2; //技能sn
	required int32 errorCode 					= 3; //错误码
}

//战斗结束
message SCCombatEnd {
	required int32 result 							= 1; //1:胜利 2：失败
	required int32 groupSn 							= 2; 
}

//战斗顺序及回合号
message SCCombatList {
	required int32 turn 							= 1; //回合号
	repeated int64 ids 								= 2; //移动列表
	required int64 currentId 						= 3; //将要移动对象的id
	required float energy	 						= 4; //能量槽当前值
	repeated DPairII skillCD						= 5; //冷却中的技能 skillSn:当前cd
}
// 20017占用

//对象死亡
message SCCombatDie {
	required int64 id 							= 1; //id
}

//退出战斗
message CSQuitCombat {
}

//退出战斗返回
message SCQuitCombat {
	required int32 errorCode 						= 1; 
}

//对象增加
message SCCombatAdd {
	repeated DCombatObjectInfo obj	= 1; 
}

//技能切场景
message CSSkillSwitchScene {
	required int32 stageSn = 1; //场景sn

}
//技能切场景
message SCSkillSwitchScene {
	required int32 stageSn  = 1; // 场景sn
	repeated DMove heroMove	= 2; // 每个人的位置

}



// -----------------------------------------
// 测试消息
// -----------------------------------------
//从客户端发送到服务器

message DGmMethod {
	required string name	= 1; // 方法名
	required string title	= 2; // 标题
	required string info	= 3; // 信息
	required string example	= 4; // 实例
	required string params  = 5; // 参数信息
}

// 执行命令
message CSGmCmd {
	required string command	= 1; // GM命令
}
// 查询命令
message CSGmCmdQuery {
}
// 查询命令
message SCGmCmdQuery {
	repeated DGmMethod dMethod = 1; // 命令
}
